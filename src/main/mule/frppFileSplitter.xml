<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="fileSplitter_main" doc:id="dad71611-db2a-40ba-b291-9171d97497a1">
		<logger level="INFO" doc:name="1.Process Started" doc:id="164bfbc1-6282-4105-9c94-277bc3931873" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 1.Process Started"/>
		<ee:transform doc:name="Set Status To Processing" doc:id="97104a32-ba93-4af7-88df-5838b7ad8032" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="updateStatusReq" ><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status1')   //Processing
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="SetFileStatus" doc:id="6bb08838-84fd-4231-85be-613003b78d56" name="SetStatuses"/>
		<salesforce:query doc:name="Read File Attachment" doc:id="8438c8e4-b112-4db6-bb75-bfeb659fa926" config-ref="SalesforceGeoFL3_Global">
			<salesforce:salesforce-query>SELECT Id, Body FROM Attachment where Id= ':attachmentId'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"attachmentId" : vars.file.Attachment_ID__c
}]]]></salesforce:parameters>
		</salesforce:query>
 
 <choice doc:name="Choice" doc:id="5fa04b1b-14be-4293-bea9-1244bce4e917" >
			<when expression="#[vars.file.File_Extension__c == 'CSV']">
				<set-payload value="#[payload[0].Body]" doc:name="Read CSV  Payload" doc:id="6ec24957-d911-4e7a-a094-23cb500bae81" mimeType="application/csv" />
				<ee:transform doc:name="get assetType" doc:id="27c6ade4-cfb3-4395-8b45-a0a118bbdf5f">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
 output application/json 
 var astType = {(payload default [] map  {
          (($[0] default "" splitBy "|")[0]) : (($[0] default "" splitBy "|")[0])
     } 
 )}
 ---
 
   astType[0]
 
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<ee:transform doc:name="CSV TO XML" doc:id="e388946b-65c9-4804-bf4b-a22e7215f26a">
			<ee:message>
			</ee:message>
					<ee:variables >
						<ee:set-variable variableName="assetPayload" ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8"
 ---
 using (keyPair = (payload[0] pluck $$ default "")[0] splitBy "|" ){
  FRPPData  @(AGENCYCODE: keyPair[3],ACTION:keyPair[2],FY:keyPair[1]) : {(payload default [] map  {
          (($[0] default "" splitBy "|")[0]) : 
             {(($[0] default "" splitBy "|")[1 to -1] default [] map {
              ("Field" ++ ($$+1)) : $
          })} 
     }
 )}
 }
]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<choice doc:name="Choice" doc:id="d1f43ed1-fca1-4a68-b2af-e4d720bbb254">
					<when expression='#[vars.assetType == "BLDG"]'>
						<ee:transform doc:name="BLDG" doc:id="de42402f-f70e-4086-ae9a-bbb49baedfbd" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type35Building: vars.assetPayload.FRPPData.*BLDG map (asset, index) ->  {
		RealPropertyType: "35",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		(FieldOffice : asset.Field2) if (asset.Field2 != null),
		(FieldOfficeCollocation : asset.Field3) if (asset.Field2 != null),
		
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field4) if (asset.Field4 != null),
			(LeaseAuthorityIndicator : asset.Field5) if (asset.Field5 != null)
			}) if (asset.Field4 != null or asset.Field5 != null),
		
		(Status: {
			(StatusIndicator : asset.Field6) if (asset.Field6 != null),
			(SurplusDeclarationDate : asset.Field7) if (asset.Field7 != null),
			(ReportOfExcessSubmittedDate : asset.Field8) if (asset.Field8 != null),
			(ReportOfExcessAcceptedDate : asset.Field9) if (asset.Field9 != null),
			(DeterminationToDisposeDate : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field11) if (asset.Field11 != null),
			(OutgrantIndicator : asset.Field12) if (asset.Field12 != null),
			(CannotCurrentlyBeDisposed : asset.Field13) if (asset.Field13 != null),	
			}) if (asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null or asset.Field12 != null or asset.Field13 != null),
		
		(RealProperty : asset.Field14) if (asset.Field14 != null),
		(FOIAExemption : asset.Field15) if (asset.Field15 != null),
		(StatutoryCitation : asset.Field16) if (asset.Field16 != null),
		(HistoricalStatus : asset.Field17) if (asset.Field17 != null),
		(ReportingAgency : asset.Field18) if (asset.Field18 != null),
		(UsingOrganization : asset.Field19) if (asset.Field19 != null),
		(LeaseExpirationDate : asset.Field20) if (asset.Field20 != null),
		(LeaseStartDate : asset.Field21) if (asset.Field21 != null),
		(LeaseOccupancyDate : asset.Field22) if (asset.Field22 != null),
		(IsAssetExcluded : asset.Field23) if (asset.Field23 != null),
		(ReasonForExclusion : asset.Field24) if (asset.Field24 != null),				
		(YearOfAssetConstruction : asset.Field25) if (asset.Field25 != null),
		(CanNumberOfFederalEmployeesBeDetermined : asset.Field26) if (asset.Field26 != null),
		(CanNumberOfFederalContractorsBeDetermined : asset.Field27) if (asset.Field27 != null),
		
		(Personnel:{
			(FederalEmployees : asset.Field28) if (asset.Field28 != null),
			(FederalContractors : asset.Field29) if (asset.Field29 != null)
			}) if (asset.Field28 != null or asset.Field29 != null),
			
		(YearAssetReportedUnderutilized : asset.Field30) if (asset.Field30 != null),
		
		(Size:{
			(SquareFeet : asset.Field31) if (asset.Field31 != null),
			(SquareFeetUnitOfMeasure : asset.Field32) if (asset.Field32 != null)
			}) if (asset.Field31 != null or asset.Field32 != null),
			
		(ReplacementValue : asset.Field33) if (asset.Field33 != null),
		(RepairNeeds : asset.Field34) if (asset.Field34 != null),
		(HistoricalCapitalExpenditures : asset.Field35) if (asset.Field35 != null),
		(EstimatedFutureCapitalExpenditures : asset.Field36) if (asset.Field36 != null),
		
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field37) if (asset.Field37 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field38) if (asset.Field38 != null),
			(LeaseAnnualRent : asset.Field39) if (asset.Field39 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field40) if (asset.Field40 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field41) if (asset.Field41 != null)
			}) if (asset.Field37 != null or asset.Field38 != null or asset.Field39 != null or asset.Field40 != null or asset.Field41 != null),
		
		(MainLocation:{
			(StreetAddress : asset.Field42) if (asset.Field42 != null),
			(Latitude : asset.Field43) if (asset.Field43 != null),
			(Longitude : asset.Field44) if (asset.Field44 != null)
			}) if (asset.Field42 != null or asset.Field43 != null or asset.Field44 != null),

		(RealPropertyUniqueIdentifier : asset.Field45) if (asset.Field45 != null),
		(City : asset.Field46) if (asset.Field46 != null),
		(State : asset.Field47) if (asset.Field47 != null),
		(Country : asset.Field48) if (asset.Field48 != null),
		(County : asset.Field49) if (asset.Field49 != null),
		(CongressionalDistricts : asset.Field50) if (asset.Field50 != null),
		(Zipcode : asset.Field51) if (asset.Field51 != null),
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field52) if (asset.Field52 != null),
			(InstallationIdentifier : asset.Field53) if (asset.Field53 != null),
			(SubInstallationIdentifier : asset.Field54) if (asset.Field54 != null),
			}) if (asset.Field52 != null or asset.Field53 != null or asset.Field54 != null),
			
		(Utilization : asset.Field55) if (asset.Field55 != null),
		(IsSustainable : asset.Field56) if (asset.Field56 != null),
		
		(DispositionData:{
			(DispositionMethod : asset.Field57) if (asset.Field57 != null),
			(DispositionDate : asset.Field58) if (asset.Field58 != null),
			(DispositionValue : asset.Field59) if (asset.Field59 != null),
			(NetProceeds : asset.Field60) if (asset.Field60 != null),
			}) if (asset.Field57 != null or asset.Field58 != null or asset.Field59 != null or asset.Field60 != null)
	 	}
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<when expression='#[vars.assetType == "LAND"]'>
						<ee:transform doc:name="LAND" doc:id="850c3e57-c44b-4fa8-a9fb-a97431c5afa3" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type20Land: vars.assetPayload.FRPPData.*LAND map (asset, index) ->  {
		RealPropertyType: "20",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field2) if (asset.Field2 != null),
			(LeaseAuthorityIndicator : asset.Field3) if (asset.Field3 != null)
			}) if (asset.Field2 != null or asset.Field3 != null),
		
		(Status: {
			(StatusIndicator : asset.Field4) if (asset.Field4 != null),
			(SurplusDeclarationDate : asset.Field5) if (asset.Field5 != null),
			(ReportOfExcessSubmittedDate : asset.Field6) if (asset.Field6 != null),
			(ReportOfExcessAcceptedDate : asset.Field7) if (asset.Field7 != null),
			(DeterminationToDisposeDate : asset.Field8) if (asset.Field8 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field9) if (asset.Field9 != null),
			(OutgrantIndicator : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposed : asset.Field11) if (asset.Field11 != null),	
			}) if (asset.Field4 != null or asset.Field5 != null or asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null),

		(RealProperty : asset.Field12) if (asset.Field12 != null),
		(FOIAExemption : asset.Field13) if (asset.Field13 != null),
		(StatutoryCitation : asset.Field14) if (asset.Field14 != null),
		(HistoricalStatus : asset.Field15) if (asset.Field15 != null),
		(ReportingAgency : asset.Field16) if (asset.Field16 != null),
		(UsingOrganization : asset.Field17) if (asset.Field17 != null),
		(LeaseExpirationDate : asset.Field18) if (asset.Field18 != null),
		(LeaseStartDate : asset.Field19) if (asset.Field19 != null),
		(LeaseOccupancyDate : asset.Field20) if (asset.Field20 != null),
		(IsAssetExcluded : asset.Field21) if (asset.Field21 != null),
		(ReasonForExclusion : asset.Field22) if (asset.Field22 != null),			
			
		(Size:{
			(Acres : asset.Field23) if (asset.Field23 != null)
			}) if (asset.Field23 != null),
			
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field24) if (asset.Field24 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field25) if (asset.Field25 != null),
			(LeaseAnnualRent : asset.Field26) if (asset.Field26 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field27) if (asset.Field27 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field28) if (asset.Field28 != null)
			}) if (asset.Field24 != null or asset.Field25 != null or asset.Field26 != null or asset.Field27 != null or asset.Field28 != null), 
			
		(MainLocation:{
			(StreetAddress : asset.Field29) if (asset.Field29 != null),
			(Latitude : asset.Field30) if (asset.Field30 != null),
			(Longitude : asset.Field31) if (asset.Field31 != null)
			}) if (asset.Field29 != null or asset.Field30 != null or asset.Field31 != null),
	
		(RealPropertyUniqueIdentifier : asset.Field32) if (asset.Field32 != null),
		(City : asset.Field33) if (asset.Field33 != null),
		(State : asset.Field34) if (asset.Field34 != null),
		(Country : asset.Field35) if (asset.Field35 != null),
		(County : asset.Field36) if (asset.Field36 != null),
		(CongressionalDistricts : asset.Field37) if (asset.Field37 != null),
		(Zipcode : asset.Field38) if (asset.Field38 != null),
		
		
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field39) if (asset.Field39 != null),
			(InstallationIdentifier : asset.Field40) if (asset.Field40 != null),
			(SubInstallationIdentifier : asset.Field41) if (asset.Field41 != null),
			}) if (asset.Field39 != null or asset.Field40 != null or asset.Field41 != null),
			
		(Utilization : asset.Field42) if (asset.Field42 != null),	
		
		(DispositionData:{
			(DispositionMethod : asset.Field43) if (asset.Field43 != null),
			(DispositionDate : asset.Field44) if (asset.Field44 != null),
			(DispositionValue : asset.Field45) if (asset.Field45 != null),
			(NetProceeds : asset.Field46) if (asset.Field46 != null),
			}) if (asset.Field43 != null or asset.Field44 != null or asset.Field45 != null or asset.Field46 != null)
	 	}
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<when expression='#[vars.assetType == "STRUC"]'>
						<ee:transform doc:name="STRUC" doc:id="d7685247-420d-40d9-a6f2-b53ad13e5984" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type40Structure: vars.assetPayload.FRPPData.*STRUC map (asset, index) ->  {
		RealPropertyType: "40",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field2) if (asset.Field2 != null),
			(LeaseAuthorityIndicator : asset.Field3) if (asset.Field3 != null)
			}) if (asset.Field2 != null or asset.Field3 != null),
		
		(Status: {
			(StatusIndicator : asset.Field4) if (asset.Field4 != null),
			(SurplusDeclarationDate : asset.Field5) if (asset.Field5 != null),
			(ReportOfExcessSubmittedDate : asset.Field6) if (asset.Field6 != null),
			(ReportOfExcessAcceptedDate : asset.Field7) if (asset.Field7 != null),
			(DeterminationToDisposeDate : asset.Field8) if (asset.Field8 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field9) if (asset.Field9 != null),
			(OutgrantIndicator : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposed : asset.Field11) if (asset.Field11 != null),	
			}) if (asset.Field4 != null or asset.Field5 != null or asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null),
		
		(RealProperty : asset.Field12) if (asset.Field12 != null),
		(FOIAExemption : asset.Field13) if (asset.Field13 != null),
		(StatutoryCitation : asset.Field14) if (asset.Field14 != null),
		(HistoricalStatus : asset.Field15) if (asset.Field15 != null),
		(ReportingAgency : asset.Field16) if (asset.Field16 != null),
		(UsingOrganization : asset.Field17) if (asset.Field17 != null),
		(LeaseExpirationDate : asset.Field18) if (asset.Field18 != null),
		(LeaseStartDate : asset.Field19) if (asset.Field19 != null),
		(LeaseOccupancyDate : asset.Field20) if (asset.Field20 != null),
		(IsAssetExcluded : asset.Field21) if (asset.Field21 != null),
		(ReasonForExclusion : asset.Field22) if (asset.Field22 != null),				
		(YearOfAssetConstruction : asset.Field23) if (asset.Field23 != null),
		
		(Size:{
			(StructuralUnit : asset.Field24) if (asset.Field24 != null),
			(UnitOfMeasure : asset.Field25) if (asset.Field25 != null)
			}) if (asset.Field24 != null or asset.Field25 != null),
			
		(ReplacementValue : asset.Field26) if (asset.Field26 != null),
		(RepairNeeds : asset.Field27) if (asset.Field27 != null),
		(HistoricalCapitalExpenditures : asset.Field28) if (asset.Field28 != null),
		(EstimatedFutureCapitalExpenditures : asset.Field29) if (asset.Field29 != null),
		
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field30) if (asset.Field30 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field31) if (asset.Field31 != null),
			(LeaseAnnualRent : asset.Field32) if (asset.Field32 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field33) if (asset.Field33 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field34) if (asset.Field34 != null)
			}) if (asset.Field30 != null or asset.Field31 != null or asset.Field32 != null or asset.Field33 != null or asset.Field34 != null),
		
		(MainLocation:{
			(StreetAddress : asset.Field35) if (asset.Field35 != null),
			(Latitude : asset.Field36) if (asset.Field36 != null),
			(Longitude : asset.Field37) if (asset.Field37 != null)
			}) if (asset.Field35 != null or asset.Field36 != null or asset.Field37 != null),

		(RealPropertyUniqueIdentifier : asset.Field38) if (asset.Field38 != null),
		(City : asset.Field39) if (asset.Field39 != null),
		(State : asset.Field40) if (asset.Field40 != null),
		(Country : asset.Field41) if (asset.Field41 != null),
		(County : asset.Field42) if (asset.Field42 != null),
		(CongressionalDistricts : asset.Field43) if (asset.Field43 != null),
		(Zipcode : asset.Field44) if (asset.Field44 != null),
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field45) if (asset.Field45 != null),
			(InstallationIdentifier : asset.Field46) if (asset.Field46 != null),
			(SubInstallationIdentifier : asset.Field47) if (asset.Field47 != null),
			}) if (asset.Field45 != null or asset.Field46 != null or asset.Field47 != null),
			
		(Utilization : asset.Field48) if (asset.Field48 != null),
		
		(DispositionData:{
			(DispositionMethod : asset.Field49) if (asset.Field49 != null),
			(DispositionDate : asset.Field50) if (asset.Field50 != null),
			(DispositionValue : asset.Field51) if (asset.Field51 != null),
			(NetProceeds : asset.Field52) if (asset.Field52 != null),
			}) if (asset.Field49 != null or asset.Field50 != null or asset.Field51 != null or asset.Field52 != null)
	 	}
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="46b32bf5-bed6-4258-9355-8b4ac1aa49c0" message="GOT CSV of invalid assetType. Must be BLDG, LAND or STRUC." />
						<raise-error doc:name="Raise error" doc:id="ecce0b3f-4a25-4e2c-8d74-38bb018a1d16" type="CSV: INVALID_TYPE" description="GOT CSV of invalid assetType. Must be BLDG, LAND or STRUC."/>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<set-payload value="#[payload[0].Body]" doc:name="Read XML Payload" doc:id="41bae00b-28d6-4320-946b-2dc6fa15f02e" mimeType="text/xml" />
			</otherwise>
		</choice>
 
 
		<ee:transform doc:name="Transform Input To XML(2)" doc:id="26a653df-5ac6-4a05-b4d4-4301ba4dedc1">
			<ee:message>
			</ee:message>
					<ee:variables>
						<ee:set-variable variableName="fullPayload"><![CDATA[%dw 2.0
output application/xml
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="countFullPayload" ><![CDATA[%dw 2.0
output application/java
---
sizeOf (payload.FRPPData)]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
		<flow-ref doc:name="authorizeToDelete" doc:id="3a5e9860-44ef-4003-b02a-8448a769e49c" name="authorizeToDelete" />
		<flow-ref doc:name="Validate XML" doc:id="f6eada11-b7fa-4917-8061-72a9bd329576" name="schemaValidationFlow" />
		<choice doc:name="Choice-Check Validations" doc:id="23eb21a7-eb79-416a-a968-9f9188a94241" >
			<when expression='#[vars.validXML != "true"]'>
				<logger level="INFO" doc:name="XML Validation Failed" doc:id="ffd4cdb1-c264-4ab3-aa0c-73fb195ff3f2" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: XML Schema Validation Failed." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="e775705a-db2d-4723-9e2b-3e162b8ed340" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLTemplateName}" doc:name="set useTemplateName" doc:id="d19cb090-1127-416d-bbaa-4c80c998ff62" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="2f5111c2-722d-4a4d-ab44-022d42dad407" name="userEmailNotificationFlow" />
			</when>
			<when expression="#['${current.fiscalYear}'  != vars.fullPayload.FRPPData.@FY]">
				<logger level="INFO" doc:name="FY Invalid" doc:id="31acc040-94c4-4dd7-88ce-9d0c82828c6e" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Fiscal Year Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="e3a7048c-6e05-4389-aaa2-a440ebc53039" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="eb95f55f-6355-4d70-af9d-a09fbfa205be" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="db2fcd7a-e044-45a5-877f-448dd680f544" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[vars.file.AGENCY_CODE__c  != vars.fullPayload.FRPPData.@AGENCYCODE]'>
				<logger level="INFO" doc:name="AgencyCode Invalid" doc:id="4a9129e0-8468-4b5b-896c-8037debc1f8c" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Agency Code Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="654049bb-1a13-4365-ab1a-4b4ff5afca2a" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLAgencyTemplateName}" doc:name="set useTemplateName" doc:id="d7a19f21-65ea-4e3f-9dfb-c86526028e72" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="6d377a46-f1ef-43a8-9354-11a84bc580d2" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[(vars.fullPayload.FRPPData.@ACTION != "DELETE") and (vars.fullPayload.FRPPData.@ACTION !=  "ADD") and  (vars.fullPayload.FRPPData.@ACTION !=  "MODIFY")]' doc:id="212ea926-0d2a-4605-8afa-98729a508258">
				<logger level="INFO" doc:name="Action Invalid" doc:id="a7c3bb82-d56d-435f-84c6-648b236aa486" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Action Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="054bae87-bc69-4dd2-90b8-67e48a6dbb52" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLActionTemplateName}" doc:name="set useTemplateName" doc:id="b048b665-634d-424e-ae95-a3bdd69d6080" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="5c01b7de-de0d-4176-b636-63f73effc2eb" name="userEmailNotificationFlow" />
			</when>
			<when expression="#[(vars.&quot;authorizedToDelete?&quot; == 'false')]" doc:id="cfd59284-da8e-40d0-a92a-faa4c23fcb89">
				<logger level="INFO" doc:name="No Access To Delete" doc:id="fc321335-a2c6-4b3a-bbd3-35c9b706d8b2" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: No Access to Delete." />
				<set-variable value="none" doc:name="Set final Status Flag" doc:id="494a6474-d00f-4cb8-997d-25e5394757d1" variableName="setFinalStatus" />
				
				<ee:transform doc:name="setFinalStatus" doc:id="3612b869-872d-4182-983c-b0c12098e43c">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status6'),  //status6=No Access To Delete
	CI_STATUS__c : p('CI.status6') // CI.status6=No Access To Delete
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="c8de24c8-1455-42c1-a2ee-c24350334800" name="SetStatuses" />
				
			</when>
			<otherwise >
				<remove-variable doc:name="Remove Variable validXML" doc:id="a722d169-095c-4c08-95e2-eda267c990c7" variableName="validXML" />
				<logger level="INFO" doc:name="Valid XML" doc:id="e49b25f2-e464-4861-ae4e-194b16b87c2a" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 2.VALID XML Payload." />
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="457649a2-668a-4de8-9183-3de99e707039">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1'), //STARTED
	Number_of_assets_in_file__c: vars.countFullPayload
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="0ee1312a-0533-48b8-9747-b26eedb6068d" name="SetStatuses" />
				<ee:transform doc:name="split Payloads (3)" doc:id="9174e953-48a9-4e07-9dad-d37c95983ada">
			<ee:message>
			</ee:message>
			<ee:variables>
						<ee:set-variable variableName="buildingPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type35Building: payload.FRPPData.*Type35Building filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="landPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type20Land: payload.FRPPData.*Type20Land filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="structurePayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type40Structure: payload.FRPPData.*Type40Structure filter ($ != null)
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="processAllBatches" doc:id="6f5c10f5-de00-4823-86e9-89e04ad682bc" name="processAllBatches" />
			</otherwise>
		</choice>
		<choice doc:name="Choice - Final Status" doc:id="bb70e4de-a00f-4f54-b76f-a9ac6c776d12">
					<when expression='#[vars.setFinalStatus != "false" and vars.setFinalStatus != "none"]'>
						<ee:transform doc:name="setFinalStatus" doc:id="d038b428-faf7-4af4-b203-0e175b5400a4">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2'), // COMPLETED
	CI_FILE_STATUS__c: p('file.status1') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="b98f929c-5e2d-4724-911f-05d5c00439cf" name="SetStatuses" />
				<salesforce:query doc:name="Query - SF Counts" doc:id="bd97e254-d8d2-4a90-b9fd-d0010d094d12" config-ref="SalesforceGeoFL3_Global" target="countSFAssets">
				<salesforce:salesforce-query>Select ID, Number_of_assets_in_file__c, Number_of_processed_assets__c from FRPP_FILE__c where ID = ':fileId'</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"fileId" : vars.file.Id
}]]]></salesforce:parameters>
			</salesforce:query>
				<choice doc:name="Choice - SF Count Check" doc:id="b3d9e574-f3b0-4f74-87be-13dc63935532">
			<when expression="#[vars.countSFAssets[0].Number_of_assets_in_file__c == vars.countSFAssets[0].Number_of_processed_assets__c]">
						<logger level="INFO" doc:name="Success Logger" doc:id="777cb5dd-5050-4cbd-9407-b4445852bd9b" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4a. fileSplitter completed processing successfully." />
			</when>
			<otherwise>
				<set-variable value="${InvalidFileDroppedRecordsUserEmail}" doc:name="set useTemplateName" doc:id="8aa4f2d1-3c4c-4be9-9aa1-3b496f36fd1c" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="13a231bd-06ea-4700-8cda-99f66ee1a05c" name="userEmailNotificationFlow" />
						<logger level="INFO" doc:name="Error Logger" doc:id="a71889e0-571b-439b-a7a6-0f6c41a8bbdc" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4b. fileSplitter completed processing with Error: Count Mismatch." />
			</otherwise>
		</choice>
					</when>
					<when expression='#[vars.setFinalStatus == "false"]'>
				<ee:transform doc:name="setFinalStatus" doc:id="ac25c931-7bb5-4a74-9bae-f0360dba0256">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status4'),  //status4=Invalid Xml File
	CI_STATUS__c : p('CI.status3') // CI.status3=Invalid Xml File
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="07667766-fd18-40bd-96a9-fdd756ccddef" name="SetStatuses" />
				<logger level="INFO" doc:name="Error Logger" doc:id="125fafcb-5dc8-458b-82b1-ed0bd19b8c1d" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4c. fileSplitter completed processing with ERRORS." />
					</when>
			<otherwise>
				<remove-variable doc:name="Remove Variable" doc:id="d98a3038-372b-4d2f-93ae-fcbb135668c9" variableName="setFinalStatus" />
					</otherwise>
				</choice>
		<flow-ref doc:name="releaseQueue" doc:id="ccc2116f-679d-4664-8273-b3a730ed8320" name="releaseQueue"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="8effd3c1-c483-4b0e-9f8d-ff52117b482a" >
				<flow-ref doc:name="releaseQueue" doc:id="ad885b9e-7678-46ab-b5f3-7c33f64384d3" name="releaseQueue" />
				<logger level="INFO" doc:name="Error Log" doc:id="13a51406-38e6-4eac-aa96-5b3fad265588" message="ERROR:  Error Type: #[error.errorType],  ErrorDescription: #[error.detailedDescription], ErrorCause: #[error.exception.cause]  for FileName:  #[vars.fileName]" />
				<ee:transform doc:name="setFinalStatus" doc:id="3d2a027a-c936-49ea-80b4-7f2aa6997e6b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status5'),  //status5=Error during processing
	CI_STATUS__c : p('CI.status4') //CI.status4=ERRORED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="30d1a300-1fc5-4676-b231-814d04aa8e9a" name="SetStatuses" />
				<ee:transform doc:name="set error Msg" doc:id="595a3866-10e9-4e87-be9b-4bb8151287ba">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="errorMsg"><![CDATA[%dw 2.0
output application/java
---
[
  ("ErrorType:   " ++ error.errorType.namespace ++ ":" ++ error.errorType.identifier), 	
  ("Description: " ++ error.detailedDescription),
  ("ErrorCause: "  ++ error.exception.cause.exceptionCode ++ " - " ++ error.exception.cause.exceptionMessage) if (error.exception.cause.exceptionCode != null and error.exception.cause.exceptionMessage != null )
  
]

]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='#["Error occured during processing the File:  " ++ vars.fileName ++". \n\nPlease find attached error details."]' doc:name="email Body" doc:id="92205666-be69-4d95-b75f-bf7ab84f8314" variableName="emailBody"/>
				<flow-ref doc:name="supportEmailNotificationFlow" doc:id="e3faf4eb-5dd9-4ad7-8846-5feb413a09a1" name="supportEmailNotificationFlow" />
				
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="processAllBatches" doc:id="65bc8faa-242c-435b-a347-532394d9e4eb" >
		<ee:transform doc:name="Initialize Thread Variables" doc:id="26ab8495-02db-4aa9-9d56-12a155145788" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="BUILDING" doc:id="c95e1bcf-3eec-4358-9b79-f975468f2d8c" >
			<when expression='#[vars.buildingPayload.FRPPData != null and vars.buildingPayload.FRPPData != ""]'>
				<foreach doc:name="For Each - Building Batch Processing" doc:id="e718f4a2-14fb-4e31-acb9-f04d1ed9b3cc" collection="#[vars.buildingPayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize BUILDING Batch Processing (3)" doc:id="dd5d02b8-0b8b-4501-abb0-4dcd818830d1">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Building"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="3a32622d-56fa-43f3-b2c1-d3278532a88b" >
						<flow-ref doc:name="Process SingleBatch" doc:id="23c61b54-a34c-4d90-be9b-0ec125a00212" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="e3a5f5b4-6b05-44fb-b907-5739a63ad6be" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="1ac32657-92e3-4673-a51b-11f2560a775b">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.buildingPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="dc76ab8c-7dd9-4b6c-9401-faed8d35f971" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Buildings" doc:id="3f873ec6-c8c4-4d17-8992-669f91e031ab" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Building on the File."/>
			</otherwise>
		</choice>
		
		<ee:transform doc:name="Initialize Thread Variables" doc:id="09d4807d-b911-4f74-8ca6-be123fde9100" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="LAND" doc:id="5c1257c4-11cc-477d-8802-9c5ba7b87542" >
			<when expression='#[vars.landPayload.FRPPData != null and vars.landPayload.FRPPData != ""]'>
				<foreach doc:name="For Each - Land Batch Processing" doc:id="28736b78-4ffd-4d22-ae64-06a84b289918" collection="#[vars.landPayload.FRPPData]" batchSize="${batch.size}">
					<ee:transform doc:name="Initialize LAND Batch Processing (3)" doc:id="2392c0b3-f1e8-418f-b6ab-12d8c575455c">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Land"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="0a760f1f-6336-4a61-89c1-6359d6796ee0">
						<flow-ref doc:name="Process SingleBatch" doc:id="7bfafbb7-4683-4d33-b469-abd5515229b9" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="9b17a8de-85a1-4dd2-bc4e-7815d7a09083" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="d50c1ed4-c37c-4ac8-a65f-84c1e85b7908">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.landPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="360bdd9f-b126-48d1-b085-d74c07c7b33e" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Lands" doc:id="535ab1b3-0a75-4768-bfe2-1afde52498ce" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Land on the File." />
			</otherwise>
		</choice>
		
		<ee:transform doc:name="Initialize Thread Variables" doc:id="7be76a2a-16e5-494f-abb7-23169a3b3464" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="STRUCTURE" doc:id="230425f8-c370-4412-8882-433f5cebed11" >
			<when expression='#[vars.structurePayload.FRPPData != null and vars.structurePayload.FRPPData != ""]'>
				<foreach doc:name="For Each - Structure Batch Processing" doc:id="7e0404ef-f1fd-4fa3-a30e-fcd5f10c1727" collection="#[vars.structurePayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize STRUCTURE   Batch Processing (3)" doc:id="12e8113f-ae79-4d51-a5dc-c9ddceeab381">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Structure"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="ff8e1b4b-0f09-4c4d-a57d-888e8621e811" >
						<flow-ref doc:name="Process SingleBatch" doc:id="67d361ae-3f38-4567-a485-c91aeb5ef7c4" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="38883116-5d8a-4652-93e3-fec075129dda" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="f331b17d-bea9-4254-9887-e71f88ae44a4">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.structurePayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="d63247f1-1c7e-46e7-bc9d-2331663f2852" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Structure" doc:id="ed7adeef-50b9-49d8-b4da-aee2ea5aa701" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Structure on the File." />
			</otherwise>
		</choice>

	</sub-flow>
	
	<sub-flow name="processSingleBatch" doc:id="62a0390a-e646-4ded-beb0-06359750f057">
		<logger level="INFO" doc:name="Thread Started" doc:id="b6a36f59-6b9b-4e6a-8f05-f3ac8a005d27" message="Thread:  #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Started" />
		<flow-ref doc:name="buildSFPayloads" doc:id="4da30939-9215-4829-b792-99d1b4e7d90f" name="buildSFPayloads" />
		<ee:transform doc:name="Transform Message" doc:id="29712213-75d9-4ee0-8a19-3062c706e0a2">
					<ee:message>
					</ee:message>
					<ee:variables>
				<ee:set-variable variableName="vmResponse"><![CDATA[%dw 2.0
output application/java
---
{
	"threadId" : p('thread.maxThreads') - vars.threadPoolSize + 1,
	"status": "success",
	 "countRecordSuccessAdded" : vars.countSuccessASTAdded,
	 "countRecordErrorAdded" : vars.countErrorASTAdded
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
		<logger level="INFO" doc:name="Thread publishes" doc:id="dfeb5187-5a43-4894-be5b-a1e17fe1800b" message="Thread: #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Publishes: #[vars.vmResponse]" />
		<vm:publish doc:name="Publish Thread Response" doc:id="5c1242ae-39f4-4cf3-911d-0f4e8a35d050" config-ref="VM_Batch_Config" sendCorrelationId="AUTO" queueName="#[vars.queueName]">
			<vm:content><![CDATA[#[vars.vmResponse]]]></vm:content>
				</vm:publish>
	</sub-flow>
		
	<sub-flow name="buildSFPayloads" doc:id="752af0dd-fbcc-47a9-af4d-52a224fa3b3f" >
		<choice doc:name="Buildings" doc:id="2deed9ff-92ee-4bea-b475-40981e0c10ae">
			<when expression="#[vars.'proceed?' == null]">
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="84ed3d03-cacf-41d1-83f0-c4ff64ead525">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1') //STARTED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="e0b080c2-a30f-47d7-9415-36f77a78b0a8" name="SetStatuses" />
				<choice doc:name="assetType" doc:id="4746a491-a070-4971-b5b4-af526ddff569">
					<when expression='#[vars.assetType == "Building"]'>
						<ee:transform doc:name="BuildingSFPayload" doc:id="319bab8c-f028-4324-8dd0-04ba718b5911">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---

payload.*Type35Building filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	Field_Office_Code__c : $.FieldOffice,
	Field_Office_Collocation_Code__c : $.FieldOfficeCollocation,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	SquareFeet__c :  $.Size.SquareFeet,
	SquareFeetUnitOfMeasure_Code__c : $.Size.SquareFeetUnitOfMeasure,
	Year_Asset_Reported_Underutilized__c : $.YearAssetReportedUnderutilized,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	UtilizationCode__c : $.Utilization,
	FederalEmployees__c : $.Personnel.FederalEmployees,
	FederalContractors__c : $.Personnel.FederalContractors,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	Determine_Number_of_Fed_Employees_Code__c : $.CanNumberOfFederalEmployeesBeDetermined,
	Determine_Number_of_Fed_Contractors_Code__c : $.CanNumberOfFederalContractorsBeDetermined,
	SustainabilityCode__c : $.IsSustainable,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}

]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<when expression='#[vars.assetType == "Land"]'>
						<ee:transform doc:name="LandSFPayload" doc:id="4c592a83-a83f-40e0-aafa-52bea05fa00f">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---

payload.*Type20Land filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Acres__c : $.Size.Acres as Number,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	UtilizationCode__c : $.Utilization,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}

]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<when expression='#[vars.assetType == "Structure"]'>
						<ee:transform doc:name="StructureSFPayload" doc:id="58f2618c-bd64-47b9-b715-cc75b2a8c090">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---

payload.*Type40Structure filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	StructuralUnits__c : $.Size.StructuralUnit,
	UnitOfMeasure__c : $.Size.UnitOfMeasure,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}

]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="73481890-3bd2-4ca3-9972-3abffc1014c5" message="No AssetType Set.  "/>
					</otherwise>
				</choice>
				<flow-ref doc:name="payload to SF" doc:id="81b68b4c-3e0c-4334-8835-6559ac4e540f" name="sendSFPayload" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="8ee24b32-4c24-4c4e-9482-68c26ac9c013" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Had Errors other then Validation Errors. Exiting out." />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sendSFPayload" doc:id="38a682cb-98ea-4a1b-b244-160b10ff62e9" >
			<salesforce:create type="FRPP_ASSET__c" doc:name="Create Assets" doc:id="76722aed-d9be-436a-8c03-da3fb05025b3" config-ref="SalesforceGeoFL3_Global" target="sfResponse">
				<salesforce:records ><![CDATA[#[vars.sfAssetsPayload]]]></salesforce:records>
			</salesforce:create>
		<choice doc:name="Choice" doc:id="838a062c-a91d-43bf-b3a2-5f976d32a599" >
				<when expression='sizeOf (flatten(vars.sfResponse.errors) filter ($.statusCode != "FIELD_CUSTOM_VALIDATION_EXCEPTION" )) &lt; 1'>
				<ee:transform doc:name="ErrorAssets +ErrorCounts (2)" doc:id="d60cc18d-adeb-44b9-afaf-ffbd219c4370">
				<ee:message>
				</ee:message>
				<ee:variables>
						<ee:set-variable variableName="countSuccessASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countSuccessASTAdded) + (sizeOf (vars.sfResponse.*id filter ($ != null)))]]></ee:set-variable>
						<ee:set-variable variableName="sfErrorAssestsPayload" ><![CDATA[%dw 2.0
output application/java
---
vars.sfAssetsPayload filter (vars.sfResponse.id[$$] == null) map (
	$ ++
	{
	  CI_FLAG__c: "Y"	
	})
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
				<choice doc:name="Choice" doc:id="56a2c9e6-7ed5-4fa2-a509-5be12a110de4">
					<when expression="#[sizeOf (vars.sfResponse.*id filter ($ == null)) &gt; 0]">
						<salesforce:create doc:name="Create Error Assets" doc:id="58633f6d-9bc4-4567-a8f5-7a40de9b232c" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET__c" target="sfErrorAssestsResponse">
					<salesforce:records><![CDATA[#[vars.sfErrorAssestsPayload]]]></salesforce:records>
				</salesforce:create>
						<ee:transform doc:name="Errors Mapping (2)" doc:id="d32a1811-72f0-4081-828b-c0c7c0fdbf76">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
vars.sfResponse filter ($.id == null) map ((a,aIndex) -> {
 errors: a.errors map ((b,bIndex) -> {
 	
	ASSETTYPE__c: vars.assetType, 
	Agency_Code__c: vars.file.AGENCY_CODE__c,
	ERROR_FIELD__c: b.fields[0],
	ERROR_MESSAGE__c: b.message,
   	FILE_ID__c: vars.file.Id,
	FRPP_ASSET_ID__c: vars.sfErrorAssestsResponse[aIndex].id
     })
})]]></ee:set-variable>
								<ee:set-variable variableName="countErrorASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countErrorASTAdded) + (sizeOf (vars.sfErrorAssestsResponse.*id filter ($ != null)))]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<ee:transform doc:name="flatten Payload" doc:id="89a03f59-5e12-42a6-82d3-65253e0f5826">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
flatten (vars.sfErrorsPayload.errors)]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<foreach doc:name="For Each 200 Batch" doc:id="4549451f-f75b-4bb3-9ae3-c9b7db57f268" collection="#[vars.sfErrorsPayload]" batchSize="200">
							<ee:transform doc:name="Transform To JSON" doc:id="a85baf06-433c-4666-af8d-99701a3bedca" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
								</ee:message>
							</ee:transform>
							<salesforce:create doc:name="Create Errors" doc:id="055015dd-a187-464c-9a82-55ee006c098c" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET_ERROR__c" target="sfErrorsResponse">
				</salesforce:create>
						</foreach>
						<logger level="INFO" doc:name="Error Logger" doc:id="4607116b-3e7c-4b9f-89a9-7162055def5b" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3b. #[vars.assetType] Batch No.: #[vars.counter] ALL Error records processed Succesfully."/>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Success Logger" doc:id="35ce031f-0b0c-4df3-893d-5413bc1525c3" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3a. #[vars.assetType] Batch No.: #[vars.counter] ALL records processed Succesfully."/>
					</otherwise>
				</choice>
				<ee:transform doc:name="Set BatchCompletion Statuses" doc:id="64590c98-2e1a-45d8-b8fa-500c7c140070">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<flow-ref doc:name="SetFileStatus" doc:id="d3c833a2-9f2c-4c73-b1d2-d13863f7ea75" name="SetStatuses" />
				</when>
				<otherwise >
					<logger level="INFO" doc:name="Validation Errors" doc:id="be1023ce-276a-4871-b7eb-9fbf3939eefa" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR:  Received SF error other then Validation Error.  Need to Exit."/>
				<set-variable value="false" doc:name="Set proceed? to false" doc:id="94c3b210-ae1e-40e0-a574-fbc011752837" variableName="proceed?" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="8775112e-7801-46ef-bba6-a262b1284eb2" variableName="useTemplateName" />
				<ee:transform doc:name="set error Msg" doc:id="c5805efc-8fee-45d6-85c7-82924cd7ca0c">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["Fiscal Year does not match."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="d6f34b2b-7a2c-40ad-a2e4-e28ecc2ff111" name="userEmailNotificationFlow" />
				<ee:transform doc:name="set error Msg" doc:id="6c753127-7166-4b05-bac0-bf23bacc3e0e">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["THis is is my Error 1", "This is my Error 2."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='This is the email body for the Support Email. ' doc:name="email Body" doc:id="7c0d3bef-a3dc-4cca-810b-8ea3fb8fb5f5" variableName="emailBody"/>
				<flow-ref doc:name="SupportEmail" doc:id="d2797e3e-b460-4ec5-8883-65c789389e99" name="supportEmailNotificationFlow" />
				
				</otherwise>
			</choice>
	</sub-flow>
</mule>