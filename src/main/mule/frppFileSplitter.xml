<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="fileSplitter_main" doc:id="819d3108-e7b7-4564-bd80-304200b66c92">
		<logger level="INFO" doc:name="MuleX" doc:id="2eadacf9-802f-4761-b4b7-82e6b2e707a0" message="MuleX: FrppFileSplitter Service Started."/>
		<logger level="INFO" doc:name="1.Process Started" doc:id="f8c8475b-956d-4631-b34a-2a345f28faea" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 1.Process Started"/>
		<ee:transform doc:name="Set Status To Processing" doc:id="75cb778b-0867-4d25-a64d-68bed9166032" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="updateStatusReq" ><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status1')   //Processing
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="SetFileStatus" doc:id="e27a3b92-c82c-4922-b9cd-7af60d65d22d" name="SetStatuses"/>
		<salesforce:query doc:name="Read File Attachment" doc:id="4bdfdcc6-3d95-4863-ad13-96ecb2654e05" config-ref="SalesforceGeoFL3_Global">
			<salesforce:salesforce-query>SELECT Id, Body FROM Attachment where Id= ':attachmentId'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"attachmentId" : vars.file.Attachment_ID__c
}]]]></salesforce:parameters>
		</salesforce:query>
 
 <choice doc:name="Choice" doc:id="53fc1a75-dcc4-4870-9874-03236f1d9970" >
			<when expression="#[vars.file.File_Extension__c == 'CSV']">
				<set-payload value="#[payload[0].Body]" doc:name="Read CSV  Payload" doc:id="217a37cc-1c08-48d9-b75d-e5c742a28c2f" mimeType="application/csv" />
				<ee:transform doc:name="get assetType" doc:id="5b244756-b15d-4911-a14f-a7f04c7f8d1f">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
 output application/json 
 var astType = {(payload default [] map  {
          (($[0] default "" splitBy "|")[0]) : (($[0] default "" splitBy "|")[0])
     } 
 )}
 ---
 
   astType[0]
 
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<ee:transform doc:name="CSV TO XML" doc:id="07fd76db-6e92-47c5-b364-2828df61c6d7">
			<ee:message>
			</ee:message>
					<ee:variables >
						<ee:set-variable variableName="assetPayload" ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8"
 ---
 using (keyPair = (payload[0] pluck $$ default "")[0] splitBy "|" ){
  FRPPData  @(AGENCYCODE: keyPair[3],ACTION:keyPair[2],FY:keyPair[1]) : {(payload default [] map  {
          (($[0] default "" splitBy "|")[0]) : 
             {(($[0] default "" splitBy "|")[1 to -1] default [] map {
              ("Field" ++ ($$+1)) : $
          })} 
     }
 )}
 }
]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<choice doc:name="Choice" doc:id="416fad99-b1c1-4d66-8389-1ca9f8c3cf1c">
					<when expression='#[vars.assetType == "BLDG"]'>
						<ee:transform doc:name="BLDG" doc:id="4c0b92ae-38e6-4865-af56-d4f165b32dc3" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type35Building: vars.assetPayload.FRPPData.*BLDG map (asset, index) ->  {
		RealPropertyType: "35",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		(FieldOffice : asset.Field2) if (asset.Field2 != null),
		(FieldOfficeCollocation : asset.Field3) if (asset.Field2 != null),
		
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field4) if (asset.Field4 != null),
			(LeaseAuthorityIndicator : asset.Field5) if (asset.Field5 != null)
			}) if (asset.Field4 != null or asset.Field5 != null),
		
		(Status: {
			(StatusIndicator : asset.Field6) if (asset.Field6 != null),
			(SurplusDeclarationDate : asset.Field7) if (asset.Field7 != null),
			(ReportOfExcessSubmittedDate : asset.Field8) if (asset.Field8 != null),
			(ReportOfExcessAcceptedDate : asset.Field9) if (asset.Field9 != null),
			(DeterminationToDisposeDate : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field11) if (asset.Field11 != null),
			(OutgrantIndicator : asset.Field12) if (asset.Field12 != null),
			(CannotCurrentlyBeDisposed : asset.Field13) if (asset.Field13 != null),	
			}) if (asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null or asset.Field12 != null or asset.Field13 != null),
		
		(RealProperty : asset.Field14) if (asset.Field14 != null),
		(FOIAExemption : asset.Field15) if (asset.Field15 != null),
		(StatutoryCitation : asset.Field16) if (asset.Field16 != null),
		(HistoricalStatus : asset.Field17) if (asset.Field17 != null),
		(ReportingAgency : asset.Field18) if (asset.Field18 != null),
		(UsingOrganization : asset.Field19) if (asset.Field19 != null),
		(LeaseExpirationDate : asset.Field20) if (asset.Field20 != null),
		(LeaseStartDate : asset.Field21) if (asset.Field21 != null),
		(LeaseOccupancyDate : asset.Field22) if (asset.Field22 != null),
		(IsAssetExcluded : asset.Field23) if (asset.Field23 != null),
		(ReasonForExclusion : asset.Field24) if (asset.Field24 != null),				
		(YearOfAssetConstruction : asset.Field25) if (asset.Field25 != null),
		(CanNumberOfFederalEmployeesBeDetermined : asset.Field26) if (asset.Field26 != null),
		(CanNumberOfFederalContractorsBeDetermined : asset.Field27) if (asset.Field27 != null),
		
		(Personnel:{
			(FederalEmployees : asset.Field28) if (asset.Field28 != null),
			(FederalContractors : asset.Field29) if (asset.Field29 != null)
			}) if (asset.Field28 != null or asset.Field29 != null),
			
		(YearAssetReportedUnderutilized : asset.Field30) if (asset.Field30 != null),
		
		(Size:{
			(SquareFeet : asset.Field31) if (asset.Field31 != null),
			(SquareFeetUnitOfMeasure : asset.Field32) if (asset.Field32 != null)
			}) if (asset.Field31 != null or asset.Field32 != null),
			
		(ReplacementValue : asset.Field33) if (asset.Field33 != null),
		(RepairNeeds : asset.Field34) if (asset.Field34 != null),
		(HistoricalCapitalExpenditures : asset.Field35) if (asset.Field35 != null),
		(EstimatedFutureCapitalExpenditures : asset.Field36) if (asset.Field36 != null),
		
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field37) if (asset.Field37 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field38) if (asset.Field38 != null),
			(LeaseAnnualRent : asset.Field39) if (asset.Field39 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field40) if (asset.Field40 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field41) if (asset.Field41 != null)
			}) if (asset.Field37 != null or asset.Field38 != null or asset.Field39 != null or asset.Field40 != null or asset.Field41 != null),
		
		(MainLocation:{
			(StreetAddress : asset.Field42) if (asset.Field42 != null),
			(Latitude : asset.Field43) if (asset.Field43 != null),
			(Longitude : asset.Field44) if (asset.Field44 != null)
			}) if (asset.Field42 != null or asset.Field43 != null or asset.Field44 != null),
		(RealPropertyUniqueIdentifier : asset.Field45) if (asset.Field45 != null),
		(City : asset.Field46) if (asset.Field46 != null),
		(State : asset.Field47) if (asset.Field47 != null),
		(Country : asset.Field48) if (asset.Field48 != null),
		(County : asset.Field49) if (asset.Field49 != null),
		(CongressionalDistricts : asset.Field50) if (asset.Field50 != null),
		(Zipcode : asset.Field51) if (asset.Field51 != null),
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field52) if (asset.Field52 != null),
			(InstallationIdentifier : asset.Field53) if (asset.Field53 != null),
			(SubInstallationIdentifier : asset.Field54) if (asset.Field54 != null),
			}) if (asset.Field52 != null or asset.Field53 != null or asset.Field54 != null),
			
		(Utilization : asset.Field55) if (asset.Field55 != null),
		(IsSustainable : asset.Field56) if (asset.Field56 != null),
		
		(DispositionData:{
			(DispositionMethod : asset.Field57) if (asset.Field57 != null),
			(DispositionDate : asset.Field58) if (asset.Field58 != null),
			(DispositionValue : asset.Field59) if (asset.Field59 != null),
			(NetProceeds : asset.Field60) if (asset.Field60 != null),
			}) if (asset.Field57 != null or asset.Field58 != null or asset.Field59 != null or asset.Field60 != null),
		(AssetHeight: asset.Field61) if (asset.Field61 != null),
	 	(AssetHeightRange: asset.Field62) if (asset.Field62 != null)
	   }
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<when expression='#[vars.assetType == "LAND"]'>
						<ee:transform doc:name="LAND" doc:id="49ab71e6-72f2-4f83-809a-8bfd74b9b0cd" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type20Land: vars.assetPayload.FRPPData.*LAND map (asset, index) ->  {
		RealPropertyType: "20",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field2) if (asset.Field2 != null),
			(LeaseAuthorityIndicator : asset.Field3) if (asset.Field3 != null)
			}) if (asset.Field2 != null or asset.Field3 != null),
		
		(Status: {
			(StatusIndicator : asset.Field4) if (asset.Field4 != null),
			(SurplusDeclarationDate : asset.Field5) if (asset.Field5 != null),
			(ReportOfExcessSubmittedDate : asset.Field6) if (asset.Field6 != null),
			(ReportOfExcessAcceptedDate : asset.Field7) if (asset.Field7 != null),
			(DeterminationToDisposeDate : asset.Field8) if (asset.Field8 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field9) if (asset.Field9 != null),
			(OutgrantIndicator : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposed : asset.Field11) if (asset.Field11 != null),	
			}) if (asset.Field4 != null or asset.Field5 != null or asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null),
		(RealProperty : asset.Field12) if (asset.Field12 != null),
		(FOIAExemption : asset.Field13) if (asset.Field13 != null),
		(StatutoryCitation : asset.Field14) if (asset.Field14 != null),
		(HistoricalStatus : asset.Field15) if (asset.Field15 != null),
		(ReportingAgency : asset.Field16) if (asset.Field16 != null),
		(UsingOrganization : asset.Field17) if (asset.Field17 != null),
		(LeaseExpirationDate : asset.Field18) if (asset.Field18 != null),
		(LeaseStartDate : asset.Field19) if (asset.Field19 != null),
		(LeaseOccupancyDate : asset.Field20) if (asset.Field20 != null),
		(IsAssetExcluded : asset.Field21) if (asset.Field21 != null),
		(ReasonForExclusion : asset.Field22) if (asset.Field22 != null),			
			
		(Size:{
			(Acres : asset.Field23) if (asset.Field23 != null)
			}) if (asset.Field23 != null),
			
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field24) if (asset.Field24 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field25) if (asset.Field25 != null),
			(LeaseAnnualRent : asset.Field26) if (asset.Field26 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field27) if (asset.Field27 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field28) if (asset.Field28 != null)
			}) if (asset.Field24 != null or asset.Field25 != null or asset.Field26 != null or asset.Field27 != null or asset.Field28 != null), 
			
		(MainLocation:{
			(StreetAddress : asset.Field29) if (asset.Field29 != null),
			(Latitude : asset.Field30) if (asset.Field30 != null),
			(Longitude : asset.Field31) if (asset.Field31 != null)
			}) if (asset.Field29 != null or asset.Field30 != null or asset.Field31 != null),
	
		(RealPropertyUniqueIdentifier : asset.Field32) if (asset.Field32 != null),
		(City : asset.Field33) if (asset.Field33 != null),
		(State : asset.Field34) if (asset.Field34 != null),
		(Country : asset.Field35) if (asset.Field35 != null),
		(County : asset.Field36) if (asset.Field36 != null),
		(CongressionalDistricts : asset.Field37) if (asset.Field37 != null),
		(Zipcode : asset.Field38) if (asset.Field38 != null),
		
		
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field39) if (asset.Field39 != null),
			(InstallationIdentifier : asset.Field40) if (asset.Field40 != null),
			(SubInstallationIdentifier : asset.Field41) if (asset.Field41 != null),
			}) if (asset.Field39 != null or asset.Field40 != null or asset.Field41 != null),
			
		(Utilization : asset.Field42) if (asset.Field42 != null),	
		
		(DispositionData:{
			(DispositionMethod : asset.Field43) if (asset.Field43 != null),
			(DispositionDate : asset.Field44) if (asset.Field44 != null),
			(DispositionValue : asset.Field45) if (asset.Field45 != null),
			(NetProceeds : asset.Field46) if (asset.Field46 != null),
			}) if (asset.Field43 != null or asset.Field44 != null or asset.Field45 != null or asset.Field46 != null)
	 	}
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<when expression='#[vars.assetType == "STRUC"]'>
						<ee:transform doc:name="STRUC" doc:id="d3ad0c49-2d45-4e8b-9cdd-ae33601beb82" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type40Structure: vars.assetPayload.FRPPData.*STRUC map (asset, index) ->  {
		RealPropertyType: "40",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field2) if (asset.Field2 != null),
			(LeaseAuthorityIndicator : asset.Field3) if (asset.Field3 != null)
			}) if (asset.Field2 != null or asset.Field3 != null),
		
		(Status: {
			(StatusIndicator : asset.Field4) if (asset.Field4 != null),
			(SurplusDeclarationDate : asset.Field5) if (asset.Field5 != null),
			(ReportOfExcessSubmittedDate : asset.Field6) if (asset.Field6 != null),
			(ReportOfExcessAcceptedDate : asset.Field7) if (asset.Field7 != null),
			(DeterminationToDisposeDate : asset.Field8) if (asset.Field8 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field9) if (asset.Field9 != null),
			(OutgrantIndicator : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposed : asset.Field11) if (asset.Field11 != null),	
			}) if (asset.Field4 != null or asset.Field5 != null or asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null),
		
		(RealProperty : asset.Field12) if (asset.Field12 != null),
		(FOIAExemption : asset.Field13) if (asset.Field13 != null),
		(StatutoryCitation : asset.Field14) if (asset.Field14 != null),
		(HistoricalStatus : asset.Field15) if (asset.Field15 != null),
		(ReportingAgency : asset.Field16) if (asset.Field16 != null),
		(UsingOrganization : asset.Field17) if (asset.Field17 != null),
		(LeaseExpirationDate : asset.Field18) if (asset.Field18 != null),
		(LeaseStartDate : asset.Field19) if (asset.Field19 != null),
		(LeaseOccupancyDate : asset.Field20) if (asset.Field20 != null),
		(IsAssetExcluded : asset.Field21) if (asset.Field21 != null),
		(ReasonForExclusion : asset.Field22) if (asset.Field22 != null),				
		(YearOfAssetConstruction : asset.Field23) if (asset.Field23 != null),
		
		(Size:{
			(StructuralUnit : asset.Field24) if (asset.Field24 != null),
			(UnitOfMeasure : asset.Field25) if (asset.Field25 != null)
			}) if (asset.Field24 != null or asset.Field25 != null),
			
		(ReplacementValue : asset.Field26) if (asset.Field26 != null),
		(RepairNeeds : asset.Field27) if (asset.Field27 != null),
		(HistoricalCapitalExpenditures : asset.Field28) if (asset.Field28 != null),
		(EstimatedFutureCapitalExpenditures : asset.Field29) if (asset.Field29 != null),
		
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field30) if (asset.Field30 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field31) if (asset.Field31 != null),
			(LeaseAnnualRent : asset.Field32) if (asset.Field32 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field33) if (asset.Field33 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field34) if (asset.Field34 != null)
			}) if (asset.Field30 != null or asset.Field31 != null or asset.Field32 != null or asset.Field33 != null or asset.Field34 != null),
		
		(MainLocation:{
			(StreetAddress : asset.Field35) if (asset.Field35 != null),
			(Latitude : asset.Field36) if (asset.Field36 != null),
			(Longitude : asset.Field37) if (asset.Field37 != null)
			}) if (asset.Field35 != null or asset.Field36 != null or asset.Field37 != null),
		(RealPropertyUniqueIdentifier : asset.Field38) if (asset.Field38 != null),
		(City : asset.Field39) if (asset.Field39 != null),
		(State : asset.Field40) if (asset.Field40 != null),
		(Country : asset.Field41) if (asset.Field41 != null),
		(County : asset.Field42) if (asset.Field42 != null),
		(CongressionalDistricts : asset.Field43) if (asset.Field43 != null),
		(Zipcode : asset.Field44) if (asset.Field44 != null),
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field45) if (asset.Field45 != null),
			(InstallationIdentifier : asset.Field46) if (asset.Field46 != null),
			(SubInstallationIdentifier : asset.Field47) if (asset.Field47 != null),
			}) if (asset.Field45 != null or asset.Field46 != null or asset.Field47 != null),
			
		(Utilization : asset.Field48) if (asset.Field48 != null),
		
		(DispositionData:{
			(DispositionMethod : asset.Field49) if (asset.Field49 != null),
			(DispositionDate : asset.Field50) if (asset.Field50 != null),
			(DispositionValue : asset.Field51) if (asset.Field51 != null),
			(NetProceeds : asset.Field52) if (asset.Field52 != null),
			}) if (asset.Field49 != null or asset.Field50 != null or asset.Field51 != null or asset.Field52 != null),
		(AssetHeight: asset.Field53) if (asset.Field53 != null),
	 	(AssetHeightRange: asset.Field54) if (asset.Field54 != null)
	   }
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="1841b5fd-f618-4071-9df4-3baa28660025" message="GOT CSV of invalid assetType. Must be BLDG, LAND or STRUC." />
						<raise-error doc:name="Raise error" doc:id="192c4753-3127-44bf-9e35-465f39f1048a" type="CSV: INVALID_TYPE" description="GOT CSV of invalid assetType. Must be BLDG, LAND or STRUC."/>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<set-payload value="#[payload[0].Body]" doc:name="Read XML Payload" doc:id="92f46883-d0bf-4215-95c2-6a153372a1a1" mimeType="text/xml" />
			</otherwise>
		</choice>
 
 
		<ee:transform doc:name="Transform Input To XML" doc:id="e05553bd-9921-4795-b609-4b19c2e3fb39">
			<ee:message>
			</ee:message>
					<ee:variables>
				<ee:set-variable variableName="countFullPayload" ><![CDATA[%dw 2.0
output application/java
---
sizeOf (payload.FRPPData filterObject ($ != null))]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
		<flow-ref doc:name="authorizeToDelete" doc:id="f216b5db-27ab-4ec0-9252-be304824a2ef" name="authorizeToDelete" />
		<flow-ref doc:name="Validate XML" doc:id="a4ad91e3-601f-49d1-8744-d86c86c90e5d" name="schemaValidationFlow" />
		<choice doc:name="Choice-Check Validations" doc:id="9dc85e59-81c5-4a84-bc73-618c36ea95a0" >
			<when expression='#[vars.validXML != "true"]'>
				<logger level="INFO" doc:name="XML Validation Failed" doc:id="9476cf2f-3a9e-4ba7-b84c-09e559460781" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: XML Schema Validation Failed." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="572ea216-cd0b-42b7-83cd-8cdcce1e9fee" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLTemplateName}" doc:name="set useTemplateName" doc:id="a2a547f4-7252-4f17-a4b8-1169272a45a1" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="bb1d4baf-230b-47a5-9906-12fdf7e00590" name="userEmailNotificationFlow" />
			</when>
			<when expression="#['${current.fiscalYear}'  != payload.FRPPData.@FY]">
				<logger level="INFO" doc:name="FY Invalid" doc:id="475421ce-1c6b-4b71-a116-c859a2060071" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Fiscal Year Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="a366a5fb-9fdb-4a45-b4d5-3b542fe4d51e" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="6b19582a-1c43-4097-bd2d-acf743421fa8" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="5a79aad2-f71d-4a9c-8841-005a48d6eccb" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[vars.file.AGENCY_CODE__c  != payload.FRPPData.@AGENCYCODE]'>
				<logger level="INFO" doc:name="AgencyCode Invalid" doc:id="4f0a19d8-e904-4cfc-8454-985e996b3dae" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Agency Code Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="84937c48-13e7-44eb-9fa9-4876699617d3" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLAgencyTemplateName}" doc:name="set useTemplateName" doc:id="b900a4c9-6425-4c6e-9f27-9261f23b136e" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="cc7b19ff-9915-441c-9072-606155cfbef9" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[(payload.FRPPData.@ACTION != "DELETE") and (payload.FRPPData.@ACTION !=  "ADD") and  (payload.FRPPData.@ACTION !=  "MODIFY")]' doc:id="c0ce0793-8c25-47b0-8cc1-b8120e53980a">
				<logger level="INFO" doc:name="Action Invalid" doc:id="1d73b709-40ec-4939-8de1-131f37a4edef" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Action Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="09e26cfd-5d3e-4bb9-a77d-cfa877a7eea3" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLActionTemplateName}" doc:name="set useTemplateName" doc:id="190cb910-a853-422d-b3a2-f4ab844607d0" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="41738020-c177-4a83-b292-30965021686b" name="userEmailNotificationFlow" />
			</when>
			<when expression="#[(vars.&quot;authorizedToDelete?&quot; == 'false')]" doc:id="7c99381b-1b74-477a-baf9-7477a95cb665">
				<logger level="INFO" doc:name="No Access To Delete" doc:id="b5520752-5960-4281-8d52-badd075314b3" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: No Access to Delete." />
				<set-variable value="none" doc:name="Set final Status Flag" doc:id="d534d7d3-12a2-4722-a839-072a060a6914" variableName="setFinalStatus" />
				
				<ee:transform doc:name="setFinalStatus" doc:id="11fc8f43-6eb2-43b2-9dca-f322885f19ec">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status6'),  //status6=No Access To Delete
	CI_STATUS__c : p('CI.status6') // CI.status6=No Access To Delete
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="f65f8017-223c-4210-bb39-d366169bc7a2" name="SetStatuses" />
				
			</when>
			<otherwise >
				<remove-variable doc:name="Remove Variable validXML" doc:id="3271fb0c-5f90-43af-93fc-1aabaa551a56" variableName="validXML" />
			<!-- 	<remove-variable doc:name="Remove Variable  fullPayload" doc:id="421cfddf-2599-4698-8ce7-58055fd29ccf" variableName="fullPayload" />  -->
				<logger level="INFO" doc:name="Valid XML" doc:id="bf844c83-9442-45cb-9baf-efa10711ab3e" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 2.VALID XML Payload." />
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="704e76ab-1961-4b22-951d-58deb925ff8b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1'), //STARTED
	Number_of_assets_in_file__c: vars.countFullPayload
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="85c20250-9589-42d5-8bc6-944c45dc9cab" name="SetStatuses" />
				<logger level="INFO" doc:name="MuleX" doc:id="94812135-36b2-49d8-8024-9d0d443d7d2e" message="MuleX: FrppFileSplitter1: Split 3 Payload Start."/>
				<ee:transform doc:name="split Payloads (3)" doc:id="a6f5dd85-88a0-46c4-a7c5-77e8afa45dfa">
			<ee:message>
			</ee:message>
			<ee:variables>
						<ee:set-variable variableName="buildingPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type35Building: payload.FRPPData.*Type35Building filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="landPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type20Land: payload.FRPPData.*Type20Land filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="structurePayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type40Structure:  payload.FRPPData.*Type40Structure filter ($ != null)
	} 
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="MuleX" doc:id="c1b19966-0b7c-406a-bb50-c6bd301b3651" message="MuleX: FrppFileSplitter1: Split 3 Payload End."/>
				<set-payload value="#[null]" doc:name="remove Payload" doc:id="ade5d260-2e25-4877-964c-726a6b221904" />
				<flow-ref doc:name="processAllBatches" doc:id="754880ac-4a0f-43ce-b4d8-46582e0e81d4" name="processAllBatches" />
			</otherwise>
		</choice>
		<choice doc:name="Choice - Final Status" doc:id="a7e401c2-6f98-4298-a0d3-6b1daca2198a">
					<when expression='#[vars.setFinalStatus != "false" and vars.setFinalStatus != "none"]'>
						<ee:transform doc:name="setFinalStatus" doc:id="0ed987b3-4103-4f8e-b750-725acb1759dc">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2'), // COMPLETED
	CI_FILE_STATUS__c: p('file.status1') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="146d2dfe-f5cf-4df7-9c0f-c6d94dc8cb8e" name="SetStatuses" />
				<salesforce:query doc:name="Query - SF Counts" doc:id="22457888-4ead-4bcf-bec4-6a962748c0f9" config-ref="SalesforceGeoFL3_Global" target="countSFAssets">
				<salesforce:salesforce-query>Select ID, Number_of_assets_in_file__c, Number_of_processed_assets__c from FRPP_FILE__c where ID = ':fileId'</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"fileId" : vars.file.Id
}]]]></salesforce:parameters>
			</salesforce:query>
				<choice doc:name="Choice - SF Count Check" doc:id="da384659-85fe-42fe-9182-9a1621c4708b">
			<when expression="#[vars.countSFAssets[0].Number_of_assets_in_file__c == vars.countSFAssets[0].Number_of_processed_assets__c]">
						<logger level="INFO" doc:name="Success Logger" doc:id="00ead3e5-7670-47be-aa46-b1f308a362a3" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4a. fileSplitter completed processing successfully." />
			</when>
			<otherwise>
				<set-variable value="${InvalidFileDroppedRecordsUserEmail}" doc:name="set useTemplateName" doc:id="defafaa3-f302-41a0-9fcc-c18a65d8ea2e" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="2c826771-a764-4bfa-ac69-4f0e24b90bb6" name="userEmailNotificationFlow" />
						<logger level="INFO" doc:name="Error Logger" doc:id="1884291f-37e9-4de5-9061-cfb4a2c3efcd" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4b. fileSplitter completed processing with Error: Count Mismatch." />
			</otherwise>
		</choice>
					</when>
					<when expression='#[vars.setFinalStatus == "false"]'>
				<ee:transform doc:name="setFinalStatus" doc:id="10112515-3eb9-43d0-968f-b81c7bacb126">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status4'),  //status4=Invalid Xml File
	CI_STATUS__c : p('CI.status3') // CI.status3=Invalid Xml File
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="305089f0-1c06-4841-a3e5-801fc144c917" name="SetStatuses" />
				<logger level="INFO" doc:name="Error Logger" doc:id="502e1b22-1888-4033-9256-985135795dc2" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4c. fileSplitter completed processing with ERRORS." />
					</when>
			<otherwise>
				<remove-variable doc:name="Remove Variable" doc:id="f78fb080-59cd-446a-bc19-7baf30c73048" variableName="setFinalStatus" />
					</otherwise>
				</choice>
		<flow-ref doc:name="releaseQueue" doc:id="4d2ee87f-02f1-4123-9c14-49297743c0e2" name="releaseQueue"/>
		<logger level="INFO" doc:name="MuleX" doc:id="a86f52e5-8e94-4e6b-bd22-dcfd8e8cebe0" message="MuleX: FrppFileSplitter Service Completed."/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="f5715e01-23c9-4f02-93cc-6d33b62ebe40" >
				<flow-ref doc:name="releaseQueue" doc:id="cf2a3522-cfe5-422c-a0ec-e2301022ebdb" name="releaseQueue" />
				<logger level="INFO" doc:name="Error Log" doc:id="10bb5e7a-6c67-4aea-9019-ed7d8fb0ced1" message="ERROR:  Error Type: #[error.errorType],  ErrorDescription: #[error.detailedDescription], ErrorCause: #[error.exception.cause]  for FileName:  #[vars.fileName]" />
				<ee:transform doc:name="setFinalStatus" doc:id="2bb1d9bc-2cc5-41ef-8dc7-800cce75734d">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status5'),  //status5=Error during processing
	CI_STATUS__c : p('CI.status4') //CI.status4=ERRORED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="77337031-c7f6-4dfc-bd45-f559482d0c30" name="SetStatuses" />
				<ee:transform doc:name="set error Msg" doc:id="f4bec169-f8f2-44df-870e-ce9440005b15">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="errorMsg"><![CDATA[%dw 2.0
output application/java
---
[
  ("ErrorType:   " ++ error.errorType.namespace ++ ":" ++ error.errorType.identifier), 	
  ("Description: " ++ error.detailedDescription),
  ("ErrorCause: "  ++ error.exception.cause.exceptionCode ++ " - " ++ error.exception.cause.exceptionMessage) if (error.exception.cause.exceptionCode != null and error.exception.cause.exceptionMessage != null )
  
]
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='#["Error occured during processing the File:  " ++ vars.fileName ++". \n\nPlease find attached error details."]' doc:name="email Body" doc:id="3755678b-13bf-44f4-a988-fd1dee6a06cf" variableName="emailBody"/>
				<flow-ref doc:name="supportEmailNotificationFlow" doc:id="82d18974-acee-4dde-8934-4e5eaee8f877" name="supportEmailNotificationFlow" />
				
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="processAllBatches" doc:id="7d02e73f-4649-48ac-ae8a-744f3d51aac1" >
		<ee:transform doc:name="Initialize Thread Variables" doc:id="7279b528-f938-4130-ba0b-57fca5da36c2" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="BUILDING" doc:id="8b0b4dfe-2d4f-46a9-af7c-2a7d47e1837d" >
			<when expression='#[vars.buildingPayload.FRPPData.Type35Building.RealPropertyType != null and vars.buildingPayload.FRPPData.Type35Building.RealPropertyType != ""]'>
				<foreach doc:name="For Each - Building Batch Processing" doc:id="b922f519-951c-448f-b58a-5e898407d5c6" collection="#[vars.buildingPayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize BUILDING Batch Processing (3)" doc:id="b898cd1d-2d8d-4a27-9fe7-4c08aff3cd15">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Building"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="6296a74e-d4ce-4b9c-85f2-f6afe8e603cb" >
						<flow-ref doc:name="Process SingleBatch" doc:id="8ad8d723-014a-46a1-b461-25e6b353176a" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="4d27756f-eee0-41fa-885b-097ddd6c4198" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="29361573-f8c7-4f96-ae73-4647030a47bf">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.buildingPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="44e93f48-9f76-4e94-87b1-602eec77cc37" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Buildings" doc:id="466f8815-ecb2-4e26-97a6-447ee4cdd585" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Building on the File."/>
			</otherwise>
		</choice>
		
		<remove-variable doc:name="Remove buildingPayload" doc:id="b73ff70a-fecf-4deb-8559-65fe2187aafb" variableName="buildingPayload"/>
		<ee:transform doc:name="Initialize Thread Variables" doc:id="6d547082-32b9-4df9-8d3a-eb800d477a2a" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="LAND" doc:id="b2755d4b-bbe3-4c66-8607-b0ad8765a81d" >
			<when expression='#[vars.landPayload.FRPPData.Type20Land.RealPropertyType != null and vars.landPayload.FRPPData.Type20Land.RealPropertyType != ""]'>
				<foreach doc:name="For Each - Land Batch Processing" doc:id="dd3ae99b-20fa-4ccf-94ad-125b49dd6428" collection="#[vars.landPayload.FRPPData]" batchSize="${batch.size}">
					<ee:transform doc:name="Initialize LAND Batch Processing (3)" doc:id="c8aed75b-5cab-49f0-b7b8-55998522181b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Land"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="22ae369d-f0f9-45f2-a94d-c9807de20028">
						<flow-ref doc:name="Process SingleBatch" doc:id="1888bbe1-8790-4fb9-8b3e-4651f1a60980" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="1c458d96-2b08-42c7-9513-754f079a1728" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="07578037-9167-4544-8810-0b65a21c6e0e">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.landPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="99702147-529d-425f-911e-65c100c58820" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Lands" doc:id="95be77c9-2dae-4430-8925-989f3e009dfb" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Land on the File." />
			</otherwise>
		</choice>
		
		<remove-variable doc:name="Remove landPayload" doc:id="71e26e93-4154-4da3-b99b-785a5ac060d5" variableName="landPayload"/>
		<ee:transform doc:name="Initialize Thread Variables" doc:id="ae45afbb-d227-4c5b-b50c-1ce06f919de7" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="STRUCTURE" doc:id="7e68443f-31d8-40a6-a834-0f53d29e9d10" >
			<when expression='#[vars.structurePayload.FRPPData.Type40Structure.RealPropertyType != null and vars.structurePayload.FRPPData.Type40Structure.RealPropertyType != ""]'>
				<foreach doc:name="For Each - Structure Batch Processing" doc:id="716f4761-46c0-4d17-95ef-50b440f2b37d" collection="#[vars.structurePayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize STRUCTURE   Batch Processing (3)" doc:id="c25f79b6-65f3-42ef-876a-51f29846de41">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Structure"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="1ac1f6ff-fcb1-47c5-b08c-f9033da66e4f" >
						<flow-ref doc:name="Process SingleBatch" doc:id="2c7cbd8f-1523-4bd0-9610-361fe155a392" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="4097a088-a514-47cd-9a5c-d290709bc4c6" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="334861a4-4d46-4ebf-afba-604745b88a61">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.structurePayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="85ee8297-3cfd-4f7f-9563-25490760d18d" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Structure" doc:id="e3afde5c-af45-4538-b99a-721e09c6fdf8" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Structure on the File." />
			</otherwise>
		</choice>
		<remove-variable doc:name="Remove structurePayload" doc:id="f9b3c30e-2c4c-40e3-a652-ae0efc3ca35f" variableName="structurePayload"/>

	</sub-flow>
	
	<sub-flow name="processSingleBatch" doc:id="c3a36bf2-c200-47ab-a015-43a75245b6a7">
		<logger level="INFO" doc:name="Thread Started" doc:id="7f071fa1-e8ca-4376-9c0a-aa78f4fddb32" message="Thread:  #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Started" />
		<flow-ref doc:name="buildSFPayloads" doc:id="ef06b189-7cb7-4d34-8f0b-434b1fb82d3b" name="buildSFPayloads" />
		<ee:transform doc:name="Transform Message" doc:id="7fa0eec0-3504-4e59-a789-0a0955dd45d6">
					<ee:message>
					</ee:message>
					<ee:variables>
				<ee:set-variable variableName="vmResponse"><![CDATA[%dw 2.0
output application/java
---
{
	"threadId" : p('thread.maxThreads') - vars.threadPoolSize + 1,
	"status": "success",
	 "countRecordSuccessAdded" : vars.countSuccessASTAdded,
	 "countRecordErrorAdded" : vars.countErrorASTAdded
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
		<logger level="INFO" doc:name="Thread publishes" doc:id="d0d15b12-6c01-4514-86f1-ebc5192aef8b" message="Thread: #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Publishes: #[vars.vmResponse]" />
		<vm:publish doc:name="Publish Thread Response" doc:id="cb9704a2-d471-48ed-b950-f4d5fdabb231" config-ref="VM_Batch_Config" sendCorrelationId="AUTO" queueName="#[vars.queueName]">
			<vm:content><![CDATA[#[vars.vmResponse]]]></vm:content>
				</vm:publish>
	</sub-flow>
		
	<sub-flow name="buildSFPayloads" doc:id="37c08932-af7b-4a12-9d10-c9f4e6239320" >
		<choice doc:name="Buildings" doc:id="66832cb0-ddf6-4715-9072-b992a8131c1e">
			<when expression="#[vars.'proceed?' == null]">
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="84544293-d28d-4dac-b9dc-06cb2548cd36">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1') //STARTED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="576912ca-71a2-49a7-9df5-47634ac8f5e5" name="SetStatuses" />
				<choice doc:name="assetType" doc:id="fd8a11f4-8d48-42dc-bc46-e22a1fdf6990">
					<when expression='#[vars.assetType == "Building"]'>
						<logger level="INFO" doc:name="MuleX" doc:id="f40e9726-e1d2-4f8e-b0c1-3d14f52612bd" message="MuleX: FrppFileSplitter2: BuildingTransfromToSF Start Thread:  #[p('thread.maxThreads') - vars.threadPoolSize + 1]"/>
						<ee:transform doc:name="BuildingSFPayload" doc:id="39699a7f-daf5-473e-b560-43623ed16ef3">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---
payload filter ($ != null) map ((item, index) -> {
	Asset_Type_Code__c : item.Type35Building.RealPropertyType,
	RealPropertyUseCode__c : item.Type35Building.RealPropertyUse,
	Field_Office_Code__c : item.Type35Building.FieldOffice,
	Field_Office_Collocation_Code__c : item.Type35Building.FieldOfficeCollocation,
	LegalInterestCode__c : item.Type35Building.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : item.Type35Building.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : item.Type35Building.Status.StatusIndicator,
	SurplusDeclarationDate__c : if (item.Type35Building.Status.SurplusDeclarationDate != null) (item.Type35Building.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if (item.Type35Building.Status.ReportOfExcessSubmittedDate != null) (item.Type35Building.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if (item.Type35Building.Status.ReportOfExcessAcceptedDate != null) (item.Type35Building.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if (item.Type35Building.Status.DeterminationToDisposeDate != null) (item.Type35Building.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if (item.Type35Building.Status.CannotCurrentlyBeDisposedDate != null) (item.Type35Building.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : item.Type35Building.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : item.Type35Building.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : item.Type35Building.HistoricalStatus,
	ReportingAgencyCode__c : if (item.Type35Building.ReportingAgency != null) (item.Type35Building.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if (item.Type35Building.ReportingAgency != null) (item.Type35Building.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if (item.Type35Building.UsingOrganization != null) (item.Type35Building.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if (item.Type35Building.UsingOrganization != null) (item.Type35Building.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if (item.Type35Building.LeaseExpirationDate != null) (item.Type35Building.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if (item.Type35Building.LeaseStartDate != null) (item.Type35Building.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if (item.Type35Building.LeaseOccupancyDate != null) item.Type35Building.LeaseOccupancyDate as sfDate else null,
	SquareFeet__c :  item.Type35Building.Size.SquareFeet,
	SquareFeetUnitOfMeasure_Code__c : item.Type35Building.Size.SquareFeetUnitOfMeasure,
	Year_Asset_Reported_Underutilized__c : item.Type35Building.YearAssetReportedUnderutilized,
	ReplacementValue__c : item.Type35Building.ReplacementValue,
	RepairNeeds__c : item.Type35Building.RepairNeeds,
	Historical_Capital_Expenditures__c : item.Type35Building.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : item.Type35Building.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : item.Type35Building.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : item.Type35Building.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : item.Type35Building.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : item.Type35Building.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : item.Type35Building.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : item.Type35Building.MainLocation.StreetAddress,
	Latitude__c : item.Type35Building.MainLocation.Latitude,
	Longitude__c : item.Type35Building.MainLocation.Longitude,
	RealPropertyUniqueId__c : item.Type35Building.RealPropertyUniqueIdentifier,
	CityCode__c : item.Type35Building.City,
	StateCode__c : item.Type35Building.State,
	CountryCode__c : item.Type35Building.Country,
	CountyCode__c : item.Type35Building.County,
	CongressionalDistrict__c : item.Type35Building.CongressionalDistricts,
	ZipCode__c : item.Type35Building.Zipcode,
	InstallationName__c : item.Type35Building.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : item.Type35Building.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : item.Type35Building.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	Asset_Height__c : item.Type35Building.AssetHeight,
	Asset_Height_Range_Code__c : item.Type35Building.AssetHeightRange,
	UtilizationCode__c : item.Type35Building.Utilization,
	FederalEmployees__c : item.Type35Building.Personnel.FederalEmployees,
	FederalContractors__c : item.Type35Building.Personnel.FederalContractors,
	IsAsset_Excluded_Code__c : item.Type35Building.IsAssetExcluded,
	Exclusion_Reason_Code__c : item.Type35Building.ReasonForExclusion,
	Year_of_Construction__c : item.Type35Building.YearOfAssetConstruction,
	Determine_Number_of_Fed_Employees_Code__c : item.Type35Building.CanNumberOfFederalEmployeesBeDetermined,
	Determine_Number_of_Fed_Contractors_Code__c : item.Type35Building.CanNumberOfFederalContractorsBeDetermined,
	SustainabilityCode__c : item.Type35Building.IsSustainable,
	DispositionMethodCode__c : item.Type35Building.DispositionData.DispositionMethod,
	DispositionDate__c : if (item.Type35Building.DispositionData.DispositionDate != null) item.Type35Building.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : item.Type35Building.DispositionData.DispositionValue,
	NetProceeds__c : item.Type35Building.DispositionData.NetProceeds,
	Real_Property_Code__c : item.Type35Building.RealProperty,
	FOIA_Exemption_Code__c : item.Type35Building.FOIAExemption,
	Statutory_Citation__c : item.Type35Building.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}
)
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					<logger level="INFO" doc:name="MuleX" doc:id="9b67d3b1-15c0-442c-a356-da8e2dddb77c" message="MuleX: FrppFileSplitter2: BuildingTransfromToSF End Thread:  #[p('thread.maxThreads') - vars.threadPoolSize + 1]"/>
					</when>
					<when expression='#[vars.assetType == "Land"]'>
						<logger level="INFO" doc:name="MuleX" doc:id="89587d6d-6afb-44bd-8f88-0db0eedff1c4" message="MuleX: FrppFileSplitter2: LandTransfromToSF Start."/>
						<ee:transform doc:name="LandSFPayload" doc:id="8b1a6d21-24e7-4399-8c30-18b725a3df47">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---
payload.*Type20Land filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Acres__c : $.Size.Acres as Number,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	UtilizationCode__c : $.Utilization,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.landPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					<logger level="INFO" doc:name="MuleX" doc:id="0ae40bd5-1e3a-4d38-a013-c84f0ea582eb" message="MuleX: FrppFileSplitter2: LandTransfromToSF End."/>
					</when>
					<when expression='#[vars.assetType == "Structure"]'>
						<logger level="INFO" doc:name="MuleX" doc:id="aa019766-3d70-485c-9d99-7dfa76ab558b" message="MuleX: FrppFileSplitter2: StructureTransfromToSF Start."/>
						<ee:transform doc:name="StructureSFPayload" doc:id="1fbad009-a20e-4b9d-b3d1-2e5fea0ede2e">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---
payload.*Type40Structure filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	StructuralUnits__c : $.Size.StructuralUnit,
	UnitOfMeasureCode__c : $.Size.UnitOfMeasure,
	Asset_Height__c : $.AssetHeight,
	Asset_Height_Range_Code__c : $.AssetHeightRange,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.structurePayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
						<logger level="INFO" doc:name="MuleX" doc:id="45ba60e1-a816-42d0-9ca9-26156ad4f777" message="MuleX: FrppFileSplitter2: StructureTransfromToSF End."/>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="9f1d6fa3-251e-4b56-a590-4187590d3091" message="No AssetType Set.  "/>
					</otherwise>
				</choice>
				<flow-ref doc:name="payload to SF" doc:id="2019e3a6-9762-4769-b143-d329ee46bfbb" name="sendSFPayload" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="2f4bce24-bf21-442b-92ea-29d0b05e2a51" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Had Errors other then Validation Errors. Exiting out." />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sendSFPayload" doc:id="de8a3d1d-f06b-4673-b405-818eec85c85e" >
			<salesforce:create type="FRPP_ASSET__c" doc:name="Create Assets" doc:id="9dbca2bb-9237-4718-8728-7cd02cdd0c58" config-ref="SalesforceGeoFL3_Global" target="sfResponse">
				<salesforce:records ><![CDATA[#[vars.sfAssetsPayload]]]></salesforce:records>
			</salesforce:create>
		<choice doc:name="Choice" doc:id="0fc11e68-b76a-4405-9fa7-639cc6454155" >
				<when expression='sizeOf (flatten(vars.sfResponse.errors) filter ($.statusCode != "FIELD_CUSTOM_VALIDATION_EXCEPTION" )) &lt; 1'>
				<logger level="INFO" doc:name="MuleX" doc:id="49f04d14-bce3-423e-8f07-3fd7df3ba57c" message="MuleX: FrppFileSplitter3: CreateErrorAsset Start."/>
				<ee:transform doc:name="ErrorAssets +ErrorCounts (2)" doc:id="842e753d-52c4-4dac-a19b-5809a7c2079f">
				<ee:message>
				</ee:message>
				<ee:variables>
						<ee:set-variable variableName="countSuccessASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countSuccessASTAdded) + (sizeOf (vars.sfResponse.*id filter ($ != null)))]]></ee:set-variable>
						<ee:set-variable variableName="sfErrorAssestsPayload" ><![CDATA[%dw 2.0
output application/java
---
vars.sfAssetsPayload filter (vars.sfResponse.id[$$] == null) map (
	$ ++
	{
	  CI_FLAG__c: "Y"	
	})
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
				<logger level="INFO" doc:name="MuleX" doc:id="4767c896-d207-4d51-a1da-f00b8d5f8f5b" message="MuleX: FrppFileSplitter3: CreateErrorAsset End."/>
				<remove-variable doc:name="Remove sfAssetsPayload" doc:id="1eef4ff5-e14b-4ddf-b732-fa6c5d68e62e" variableName="sfAssetsPayload"/>
				<choice doc:name="Choice" doc:id="85aff5ac-509a-4a62-8337-40baec06d32a">
					<when expression="#[sizeOf (vars.sfResponse.*id filter ($ == null)) &gt; 0]">
						<salesforce:create doc:name="Create Error Assets" doc:id="bab42c0e-1a86-4dd6-b07a-2c20d62c52d7" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET__c" target="sfErrorAssestsResponse">
					<salesforce:records><![CDATA[#[vars.sfErrorAssestsPayload]]]></salesforce:records>
				</salesforce:create>
				
				<remove-variable doc:name="Remove sfErrorAssestsPayload" doc:id="4f087fc5-8304-40dc-ba62-b1b107d3eb30" variableName="sfErrorAssestsPayload"/>
						<logger level="INFO" doc:name="MuleX" doc:id="85e5cfa6-0302-44a1-bbaa-1086553d4d11" message="MuleX: FrppFileSplitter4: CreateSFErrorPayload Start."/>
				
				
				
						<ee:transform doc:name="Errors Mapping (2)" doc:id="671085a2-9182-420e-aaac-d1e56ed59da1">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
vars.sfResponse filter ($.id == null) map ((a,aIndex) -> {
 errors: a.errors map ((b,bIndex) -> {
 	
	ASSETTYPE__c: vars.assetType, 
	Agency_Code__c: vars.file.AGENCY_CODE__c,
	ERROR_FIELD__c: b.fields[0],
	ERROR_MESSAGE__c: b.message,
   	FILE_ID__c: vars.file.Id,
	FRPP_ASSET_ID__c: vars.sfErrorAssestsResponse[aIndex].id
     })
})]]></ee:set-variable>
								<ee:set-variable variableName="countErrorASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countErrorASTAdded) + (sizeOf (vars.sfErrorAssestsResponse.*id filter ($ != null)))]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<ee:transform doc:name="flatten Payload" doc:id="cd4b2fbb-d138-45f7-b95e-ed8afd9e3c40">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
flatten (vars.sfErrorsPayload.errors)]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<logger level="INFO" doc:name="MuleX" doc:id="d06610c0-1447-439b-b7e0-6840e3923a56" message="MuleX: FrppFileSplitter4: CreateSFErrorPayload End."/>
			   	
						<foreach doc:name="For Each 200 Batch" doc:id="7f3d6819-3581-4b8f-99e5-e2a87e1c1023" collection="#[vars.sfErrorsPayload]" batchSize="200">
							<ee:transform doc:name="Transform To JSON" doc:id="e804cf52-7fa5-4644-a89f-1aa77a598162" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
								</ee:message>
							</ee:transform>
							<salesforce:create doc:name="Create Errors" doc:id="4fe3e0eb-8666-453a-a8c1-4f0d8fff0447" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET_ERROR__c" target="sfErrorsResponse">
				</salesforce:create>
						</foreach>
						<logger level="INFO" doc:name="Error Logger" doc:id="e7758db6-a240-4ebe-9510-921566679220" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3b. #[vars.assetType] Batch No.: #[vars.counter] ALL Err records processed Succesfully."/>
					</when>
					<otherwise >
						<remove-variable doc:name="Remove sfErrorAssestsPayload" doc:id="483a7c4b-9ad7-43ac-853f-34e9c748df3c" variableName="sfErrorAssestsPayload"/>
						<logger level="INFO" doc:name="Success Logger" doc:id="6ca48a60-0d0b-404c-92c7-d6ee5ddcfa95" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3a. #[vars.assetType] Batch No.: #[vars.counter] ALL records processed Succesfully."/>
					</otherwise>
				</choice>
				<ee:transform doc:name="Set BatchCompletion Statuses" doc:id="3de963a4-0508-42e0-b1c4-62cecf049d40">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<flow-ref doc:name="SetFileStatus" doc:id="a447f53d-928d-4ec6-9d82-e397c67a4a35" name="SetStatuses" />
				</when>
				<otherwise >
					<remove-variable doc:name="Remove sfAssetsPayload" doc:id="90dc7cd2-df25-44c3-8794-bef5d1d714c0" variableName="sfAssetsPayload"/>
					<logger level="INFO" doc:name="Validation Errors" doc:id="f71b8576-b06d-46e4-ab6a-237e360a2866" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR:  Received SF error other then Validation Error.  Need to Exit."/>
					<set-variable value="false" doc:name="Set proceed? to false" doc:id="18c1bdec-65f3-4072-ad2c-c625beca4d62" variableName="proceed?" />
					<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="36badfac-6974-48f9-93a4-a6cb29b2da8e" variableName="useTemplateName" />
					<ee:transform doc:name="set error Msg" doc:id="aa328f4d-0fed-4144-9c7a-1befe0a347c8">
						<ee:message>
						</ee:message>
						<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["Received SF error other then Validation Error."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="bc806de9-b15f-4c9d-bf5d-d743a463b4cf" name="userEmailNotificationFlow" />
				<ee:transform doc:name="set error Msg" doc:id="f6af9ef1-fd8d-466b-bb9d-cfaf4d259b17">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["Received SF error other then Validation Error."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='Received SF error other then Validation Error.' doc:name="email Body" doc:id="ebdb6beb-7b3b-4c2a-b04e-77da301570b5" variableName="emailBody"/>
				<flow-ref doc:name="SupportEmail" doc:id="55487e39-4780-484e-bfcd-641f122a500d" name="supportEmailNotificationFlow" />
				
				</otherwise>
			</choice>
	</sub-flow>
</mule>
