<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="fileSplitter_main" doc:id="26d57740-aae2-44c2-9475-989ca29d1a6f">
		<logger level="INFO" doc:name="1.Process Started" doc:id="f2104286-0b60-4a83-86bc-bfd0ab49a993" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 1.Process Started"/>
		<ee:transform doc:name="Set Status To Processing" doc:id="1d37e189-dd7c-4538-8b97-a50cb35f0787" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="updateStatusReq" ><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status1')   //Processing
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="SetFileStatus" doc:id="002fdd41-c7c9-46df-90ca-8d6fd89400af" name="SetStatuses"/>
		<salesforce:query doc:name="Read File Attachment" doc:id="1f8b5be9-8ef2-4ef3-82c3-7f07d090b7c5" config-ref="SalesforceGeoFL3_Global">
			<salesforce:salesforce-query>SELECT Id, Body FROM Attachment where Id= ':attachmentId'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"attachmentId" : vars.file.Attachment_ID__c
}]]]></salesforce:parameters>
		</salesforce:query>
 
 <choice doc:name="Choice" doc:id="cfaf7e6f-f5e3-4e8e-82b1-b7747b2611a7" >
			<when expression="#[vars.file.File_Extension__c == 'CSV']">
				<set-payload value="#[payload[0].Body]" doc:name="Read CSV  Payload" doc:id="d72ac98b-719d-49cc-8bac-d46fad20ce70" mimeType="application/csv" />
				<ee:transform doc:name="get assetType" doc:id="600bed86-dbed-4b20-ab9a-fdccaa0ff3c6">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
 output application/json 
 var astType = {(payload default [] map  {
          (($[0] default "" splitBy "|")[0]) : (($[0] default "" splitBy "|")[0])
     } 
 )}
 ---
 
   astType[0]
 
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<ee:transform doc:name="CSV TO XML" doc:id="cd6a907c-b506-4328-b3df-5023bb1b591d">
			<ee:message>
			</ee:message>
					<ee:variables >
						<ee:set-variable variableName="assetPayload" ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8"
 ---
 using (keyPair = (payload[0] pluck $$ default "")[0] splitBy "|" ){
  FRPPData  @(AGENCYCODE: keyPair[3],ACTION:keyPair[2],FY:keyPair[1]) : {(payload default [] map  {
          (($[0] default "" splitBy "|")[0]) : 
             {(($[0] default "" splitBy "|")[1 to -1] default [] map {
              ("Field" ++ ($$+1)) : $
          })} 
     }
 )}
 }
]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<choice doc:name="Choice" doc:id="80d7e1f4-41e9-4752-af7b-5f680784f2f3">
					<when expression='#[vars.assetType == "BLDG"]'>
						<ee:transform doc:name="BLDG" doc:id="e97f4bdb-5ea5-4c9c-9f11-5d514d4c9050" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type35Building: vars.assetPayload.FRPPData.*BLDG map (asset, index) ->  {
		RealPropertyType: "35",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		(FieldOffice : asset.Field2) if (asset.Field2 != null),
		(FieldOfficeCollocation : asset.Field3) if (asset.Field2 != null),
		
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field4) if (asset.Field4 != null),
			(LeaseAuthorityIndicator : asset.Field5) if (asset.Field5 != null)
			}) if (asset.Field4 != null or asset.Field5 != null),
		
		(Status: {
			(StatusIndicator : asset.Field6) if (asset.Field6 != null),
			(SurplusDeclarationDate : asset.Field7) if (asset.Field7 != null),
			(ReportOfExcessSubmittedDate : asset.Field8) if (asset.Field8 != null),
			(ReportOfExcessAcceptedDate : asset.Field9) if (asset.Field9 != null),
			(DeterminationToDisposeDate : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field11) if (asset.Field11 != null),
			(OutgrantIndicator : asset.Field12) if (asset.Field12 != null),
			(CannotCurrentlyBeDisposed : asset.Field13) if (asset.Field13 != null),	
			}) if (asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null or asset.Field12 != null or asset.Field13 != null),
		
		(RealProperty : asset.Field14) if (asset.Field14 != null),
		(FOIAExemption : asset.Field15) if (asset.Field15 != null),
		(StatutoryCitation : asset.Field16) if (asset.Field16 != null),
		(HistoricalStatus : asset.Field17) if (asset.Field17 != null),
		(ReportingAgency : asset.Field18) if (asset.Field18 != null),
		(UsingOrganization : asset.Field19) if (asset.Field19 != null),
		(LeaseExpirationDate : asset.Field20) if (asset.Field20 != null),
		(LeaseStartDate : asset.Field21) if (asset.Field21 != null),
		(LeaseOccupancyDate : asset.Field22) if (asset.Field22 != null),
		(IsAssetExcluded : asset.Field23) if (asset.Field23 != null),
		(ReasonForExclusion : asset.Field24) if (asset.Field24 != null),				
		(YearOfAssetConstruction : asset.Field25) if (asset.Field25 != null),
		(CanNumberOfFederalEmployeesBeDetermined : asset.Field26) if (asset.Field26 != null),
		(CanNumberOfFederalContractorsBeDetermined : asset.Field27) if (asset.Field27 != null),
		
		(Personnel:{
			(FederalEmployees : asset.Field28) if (asset.Field28 != null),
			(FederalContractors : asset.Field29) if (asset.Field29 != null)
			}) if (asset.Field28 != null or asset.Field29 != null),
			
		(YearAssetReportedUnderutilized : asset.Field30) if (asset.Field30 != null),
		
		(Size:{
			(SquareFeet : asset.Field31) if (asset.Field31 != null),
			(SquareFeetUnitOfMeasure : asset.Field32) if (asset.Field32 != null)
			}) if (asset.Field31 != null or asset.Field32 != null),
			
		(ReplacementValue : asset.Field33) if (asset.Field33 != null),
		(RepairNeeds : asset.Field34) if (asset.Field34 != null),
		(HistoricalCapitalExpenditures : asset.Field35) if (asset.Field35 != null),
		(EstimatedFutureCapitalExpenditures : asset.Field36) if (asset.Field36 != null),
		
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field37) if (asset.Field37 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field38) if (asset.Field38 != null),
			(LeaseAnnualRent : asset.Field39) if (asset.Field39 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field40) if (asset.Field40 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field41) if (asset.Field41 != null)
			}) if (asset.Field37 != null or asset.Field38 != null or asset.Field39 != null or asset.Field40 != null or asset.Field41 != null),
		
		(MainLocation:{
			(StreetAddress : asset.Field42) if (asset.Field42 != null),
			(Latitude : asset.Field43) if (asset.Field43 != null),
			(Longitude : asset.Field44) if (asset.Field44 != null)
			}) if (asset.Field42 != null or asset.Field43 != null or asset.Field44 != null),
		(RealPropertyUniqueIdentifier : asset.Field45) if (asset.Field45 != null),
		(City : asset.Field46) if (asset.Field46 != null),
		(State : asset.Field47) if (asset.Field47 != null),
		(Country : asset.Field48) if (asset.Field48 != null),
		(County : asset.Field49) if (asset.Field49 != null),
		(CongressionalDistricts : asset.Field50) if (asset.Field50 != null),
		(Zipcode : asset.Field51) if (asset.Field51 != null),
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field52) if (asset.Field52 != null),
			(InstallationIdentifier : asset.Field53) if (asset.Field53 != null),
			(SubInstallationIdentifier : asset.Field54) if (asset.Field54 != null),
			}) if (asset.Field52 != null or asset.Field53 != null or asset.Field54 != null),
			
		(Utilization : asset.Field55) if (asset.Field55 != null),
		(IsSustainable : asset.Field56) if (asset.Field56 != null),
		
		(DispositionData:{
			(DispositionMethod : asset.Field57) if (asset.Field57 != null),
			(DispositionDate : asset.Field58) if (asset.Field58 != null),
			(DispositionValue : asset.Field59) if (asset.Field59 != null),
			(NetProceeds : asset.Field60) if (asset.Field60 != null),
			}) if (asset.Field57 != null or asset.Field58 != null or asset.Field59 != null or asset.Field60 != null),
		(AssetHeight: asset.Field61) if (asset.Field61 != null),
	 	(AssetHeightRange: asset.Field62) if (asset.Field62 != null)
	   }
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<when expression='#[vars.assetType == "LAND"]'>
						<ee:transform doc:name="LAND" doc:id="b1d99932-eb33-43a4-968d-eb9e1eef0e5e" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type20Land: vars.assetPayload.FRPPData.*LAND map (asset, index) ->  {
		RealPropertyType: "20",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field2) if (asset.Field2 != null),
			(LeaseAuthorityIndicator : asset.Field3) if (asset.Field3 != null)
			}) if (asset.Field2 != null or asset.Field3 != null),
		
		(Status: {
			(StatusIndicator : asset.Field4) if (asset.Field4 != null),
			(SurplusDeclarationDate : asset.Field5) if (asset.Field5 != null),
			(ReportOfExcessSubmittedDate : asset.Field6) if (asset.Field6 != null),
			(ReportOfExcessAcceptedDate : asset.Field7) if (asset.Field7 != null),
			(DeterminationToDisposeDate : asset.Field8) if (asset.Field8 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field9) if (asset.Field9 != null),
			(OutgrantIndicator : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposed : asset.Field11) if (asset.Field11 != null),	
			}) if (asset.Field4 != null or asset.Field5 != null or asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null),
		(RealProperty : asset.Field12) if (asset.Field12 != null),
		(FOIAExemption : asset.Field13) if (asset.Field13 != null),
		(StatutoryCitation : asset.Field14) if (asset.Field14 != null),
		(HistoricalStatus : asset.Field15) if (asset.Field15 != null),
		(ReportingAgency : asset.Field16) if (asset.Field16 != null),
		(UsingOrganization : asset.Field17) if (asset.Field17 != null),
		(LeaseExpirationDate : asset.Field18) if (asset.Field18 != null),
		(LeaseStartDate : asset.Field19) if (asset.Field19 != null),
		(LeaseOccupancyDate : asset.Field20) if (asset.Field20 != null),
		(IsAssetExcluded : asset.Field21) if (asset.Field21 != null),
		(ReasonForExclusion : asset.Field22) if (asset.Field22 != null),			
			
		(Size:{
			(Acres : asset.Field23) if (asset.Field23 != null)
			}) if (asset.Field23 != null),
			
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field24) if (asset.Field24 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field25) if (asset.Field25 != null),
			(LeaseAnnualRent : asset.Field26) if (asset.Field26 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field27) if (asset.Field27 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field28) if (asset.Field28 != null)
			}) if (asset.Field24 != null or asset.Field25 != null or asset.Field26 != null or asset.Field27 != null or asset.Field28 != null), 
			
		(MainLocation:{
			(StreetAddress : asset.Field29) if (asset.Field29 != null),
			(Latitude : asset.Field30) if (asset.Field30 != null),
			(Longitude : asset.Field31) if (asset.Field31 != null)
			}) if (asset.Field29 != null or asset.Field30 != null or asset.Field31 != null),
	
		(RealPropertyUniqueIdentifier : asset.Field32) if (asset.Field32 != null),
		(City : asset.Field33) if (asset.Field33 != null),
		(State : asset.Field34) if (asset.Field34 != null),
		(Country : asset.Field35) if (asset.Field35 != null),
		(County : asset.Field36) if (asset.Field36 != null),
		(CongressionalDistricts : asset.Field37) if (asset.Field37 != null),
		(Zipcode : asset.Field38) if (asset.Field38 != null),
		
		
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field39) if (asset.Field39 != null),
			(InstallationIdentifier : asset.Field40) if (asset.Field40 != null),
			(SubInstallationIdentifier : asset.Field41) if (asset.Field41 != null),
			}) if (asset.Field39 != null or asset.Field40 != null or asset.Field41 != null),
			
		(Utilization : asset.Field42) if (asset.Field42 != null),	
		
		(DispositionData:{
			(DispositionMethod : asset.Field43) if (asset.Field43 != null),
			(DispositionDate : asset.Field44) if (asset.Field44 != null),
			(DispositionValue : asset.Field45) if (asset.Field45 != null),
			(NetProceeds : asset.Field46) if (asset.Field46 != null),
			}) if (asset.Field43 != null or asset.Field44 != null or asset.Field45 != null or asset.Field46 != null)
	 	}
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<when expression='#[vars.assetType == "STRUC"]'>
						<ee:transform doc:name="STRUC" doc:id="1de94abd-beea-489c-b975-50dcf903ec61" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
 output application/xml inlineCloseOn="nonEmpty",encoding="UTF-8", skipNullOn="everything"
 ---
 {
 FRPPData @(AGENCYCODE:vars.assetPayload.FRPPData.@AGENCYCODE, ACTION:vars.assetPayload.FRPPData.@ACTION, FY:vars.assetPayload.FRPPData.@FY) : [
 	Type40Structure: vars.assetPayload.FRPPData.*STRUC map (asset, index) ->  {
		RealPropertyType: "40",
		(RealPropertyUse  :  asset.Field1) if (asset.Field1 != null),
		
		(LegalInterest: {
			(LegalInterestIndicator : asset.Field2) if (asset.Field2 != null),
			(LeaseAuthorityIndicator : asset.Field3) if (asset.Field3 != null)
			}) if (asset.Field2 != null or asset.Field3 != null),
		
		(Status: {
			(StatusIndicator : asset.Field4) if (asset.Field4 != null),
			(SurplusDeclarationDate : asset.Field5) if (asset.Field5 != null),
			(ReportOfExcessSubmittedDate : asset.Field6) if (asset.Field6 != null),
			(ReportOfExcessAcceptedDate : asset.Field7) if (asset.Field7 != null),
			(DeterminationToDisposeDate : asset.Field8) if (asset.Field8 != null),
			(CannotCurrentlyBeDisposedDate : asset.Field9) if (asset.Field9 != null),
			(OutgrantIndicator : asset.Field10) if (asset.Field10 != null),
			(CannotCurrentlyBeDisposed : asset.Field11) if (asset.Field11 != null),	
			}) if (asset.Field4 != null or asset.Field5 != null or asset.Field6 != null or asset.Field7 != null or asset.Field8 != null or asset.Field9 != null or asset.Field10 != null or asset.Field11 != null),
		
		(RealProperty : asset.Field12) if (asset.Field12 != null),
		(FOIAExemption : asset.Field13) if (asset.Field13 != null),
		(StatutoryCitation : asset.Field14) if (asset.Field14 != null),
		(HistoricalStatus : asset.Field15) if (asset.Field15 != null),
		(ReportingAgency : asset.Field16) if (asset.Field16 != null),
		(UsingOrganization : asset.Field17) if (asset.Field17 != null),
		(LeaseExpirationDate : asset.Field18) if (asset.Field18 != null),
		(LeaseStartDate : asset.Field19) if (asset.Field19 != null),
		(LeaseOccupancyDate : asset.Field20) if (asset.Field20 != null),
		(IsAssetExcluded : asset.Field21) if (asset.Field21 != null),
		(ReasonForExclusion : asset.Field22) if (asset.Field22 != null),				
		(YearOfAssetConstruction : asset.Field23) if (asset.Field23 != null),
		
		(Size:{
			(StructuralUnit : asset.Field24) if (asset.Field24 != null),
			(UnitOfMeasure : asset.Field25) if (asset.Field25 != null)
			}) if (asset.Field24 != null or asset.Field25 != null),
			
		(ReplacementValue : asset.Field26) if (asset.Field26 != null),
		(RepairNeeds : asset.Field27) if (asset.Field27 != null),
		(HistoricalCapitalExpenditures : asset.Field28) if (asset.Field28 != null),
		(EstimatedFutureCapitalExpenditures : asset.Field29) if (asset.Field29 != null),
		
		(AnnualOperatingCosts:{
			(LeasedAnnualOperatingCosts : asset.Field30) if (asset.Field30 != null),
			(LeasedAnnualMaintenanceCosts : asset.Field31) if (asset.Field31 != null),
			(LeaseAnnualRent : asset.Field32) if (asset.Field32 != null),
			(OwnedandOtherwiseManagedAnnualOperatingCosts : asset.Field33) if (asset.Field33 != null),
			(OwnedandOtherwiseManagedAnnualMaintenanceCosts : asset.Field34) if (asset.Field34 != null)
			}) if (asset.Field30 != null or asset.Field31 != null or asset.Field32 != null or asset.Field33 != null or asset.Field34 != null),
		
		(MainLocation:{
			(StreetAddress : asset.Field35) if (asset.Field35 != null),
			(Latitude : asset.Field36) if (asset.Field36 != null),
			(Longitude : asset.Field37) if (asset.Field37 != null)
			}) if (asset.Field35 != null or asset.Field36 != null or asset.Field37 != null),
		(RealPropertyUniqueIdentifier : asset.Field38) if (asset.Field38 != null),
		(City : asset.Field39) if (asset.Field39 != null),
		(State : asset.Field40) if (asset.Field40 != null),
		(Country : asset.Field41) if (asset.Field41 != null),
		(County : asset.Field42) if (asset.Field42 != null),
		(CongressionalDistricts : asset.Field43) if (asset.Field43 != null),
		(Zipcode : asset.Field44) if (asset.Field44 != null),
		
		(InstallationAndSubInstallationIdentifier:{
			(InstallationName : asset.Field45) if (asset.Field45 != null),
			(InstallationIdentifier : asset.Field46) if (asset.Field46 != null),
			(SubInstallationIdentifier : asset.Field47) if (asset.Field47 != null),
			}) if (asset.Field45 != null or asset.Field46 != null or asset.Field47 != null),
			
		(Utilization : asset.Field48) if (asset.Field48 != null),
		
		(DispositionData:{
			(DispositionMethod : asset.Field49) if (asset.Field49 != null),
			(DispositionDate : asset.Field50) if (asset.Field50 != null),
			(DispositionValue : asset.Field51) if (asset.Field51 != null),
			(NetProceeds : asset.Field52) if (asset.Field52 != null),
			}) if (asset.Field49 != null or asset.Field50 != null or asset.Field51 != null or asset.Field52 != null),
		(AssetHeight: asset.Field53) if (asset.Field53 != null),
	 	(AssetHeightRange: asset.Field54) if (asset.Field54 != null)
	   }
 	]
 }
 	
 	]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="ab0db9c4-dbce-4dc5-bebb-ae6b76384aaf" message="GOT CSV of invalid assetType. Must be BLDG, LAND or STRUC." />
						<raise-error doc:name="Raise error" doc:id="6f6ba5b1-8312-4cd8-99e5-fe6aec2be53d" type="CSV: INVALID_TYPE" description="GOT CSV of invalid assetType. Must be BLDG, LAND or STRUC."/>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<set-payload value="#[payload[0].Body]" doc:name="Read XML Payload" doc:id="0cc624af-dd33-4533-9ec6-d4513513369f" mimeType="text/xml" />
			</otherwise>
		</choice>
 
 
		<ee:transform doc:name="Transform Input To XML(2)" doc:id="a5e645d1-e8ba-4076-bb22-74fbf5dc587c">
			<ee:message>
			</ee:message>
					<ee:variables>
						<ee:set-variable variableName="fullPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere"
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="countFullPayload" ><![CDATA[%dw 2.0
output application/java
---
sizeOf (payload.FRPPData filterObject ($ != null))]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
		<flow-ref doc:name="authorizeToDelete" doc:id="980a300d-7110-45ea-be70-a67055d64670" name="authorizeToDelete" />
		<flow-ref doc:name="Validate XML" doc:id="fde36605-ea53-4c31-a286-fc676730c880" name="schemaValidationFlow" />
		<choice doc:name="Choice-Check Validations" doc:id="768bef25-84f1-4ee9-89f2-7944111f2f79" >
			<when expression='#[vars.validXML != "true"]'>
				<logger level="INFO" doc:name="XML Validation Failed" doc:id="bf1482c6-3795-4b87-8552-0f695c2aad2a" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: XML Schema Validation Failed." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="e599772c-c2f9-4a07-9894-17b7dc2d60b7" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLTemplateName}" doc:name="set useTemplateName" doc:id="32151ab6-8e98-4e6f-9ce8-884d1fd19c17" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="554be694-425b-4613-9dfc-c135ca46458b" name="userEmailNotificationFlow" />
			</when>
			<when expression="#['${current.fiscalYear}'  != vars.fullPayload.FRPPData.@FY]">
				<logger level="INFO" doc:name="FY Invalid" doc:id="ae3cf217-b730-4050-b7d3-1f701c06745b" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Fiscal Year Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="d078f6e4-ee9e-4820-ab0e-cd828c71f6f7" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="19cfdeca-954a-4f21-a2e1-bc72a4ca83a2" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="b7bfa245-9f69-490e-80b1-de5ec76b4a49" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[vars.file.AGENCY_CODE__c  != vars.fullPayload.FRPPData.@AGENCYCODE]'>
				<logger level="INFO" doc:name="AgencyCode Invalid" doc:id="86c751ff-5735-4c8e-a87e-64e605d6af26" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Agency Code Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="848ef308-03d6-45e3-a51d-83643c9b8993" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLAgencyTemplateName}" doc:name="set useTemplateName" doc:id="725bf6b0-a488-4ff2-8754-3036430873f6" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="da8024f3-2cda-42a5-a7e2-403e36110d13" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[(vars.fullPayload.FRPPData.@ACTION != "DELETE") and (vars.fullPayload.FRPPData.@ACTION !=  "ADD") and  (vars.fullPayload.FRPPData.@ACTION !=  "MODIFY")]' doc:id="870c3102-475e-41b3-aead-2991275f20b9">
				<logger level="INFO" doc:name="Action Invalid" doc:id="7d2d188c-1a52-42e0-8821-4f0cdbe8d1b8" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Action Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="d06aa6e9-69a0-4bb1-941f-0adf2462390e" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLActionTemplateName}" doc:name="set useTemplateName" doc:id="72399834-b6e5-4c01-a68a-5cb97af8e6bc" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="341d8914-12bf-4d0d-ae30-e8fb0e9ed032" name="userEmailNotificationFlow" />
			</when>
			<when expression="#[(vars.&quot;authorizedToDelete?&quot; == 'false')]" doc:id="6a960ac3-78c0-48d9-8cd7-bbe96c0dbd20">
				<logger level="INFO" doc:name="No Access To Delete" doc:id="7dcc52e5-345a-4bf1-9729-307843edc7b6" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: No Access to Delete." />
				<set-variable value="none" doc:name="Set final Status Flag" doc:id="2655c9bc-4d40-4630-93d6-636b98c1fe4f" variableName="setFinalStatus" />
				
				<ee:transform doc:name="setFinalStatus" doc:id="e3fc56e0-16eb-4229-b040-cec4a0b0ca51">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status6'),  //status6=No Access To Delete
	CI_STATUS__c : p('CI.status6') // CI.status6=No Access To Delete
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="0b82875e-4148-4f16-9f9e-23744e78d773" name="SetStatuses" />
				
			</when>
			<otherwise >
				<remove-variable doc:name="Remove Variable validXML" doc:id="76382df6-c2ca-4555-a683-5c0eb983ef2b" variableName="validXML" />
				<remove-variable doc:name="Remove Variable  fullPayload" doc:id="5f531cea-4b27-4ad2-94c0-a9e450ee46c4" variableName="fullPayload" />
				<logger level="INFO" doc:name="Valid XML" doc:id="a62ac735-bf06-4f42-b6f1-9332805eda7b" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 2.VALID XML Payload." />
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="89fa2b06-72d7-42f3-9d6d-8f0d8888b879">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1'), //STARTED
	Number_of_assets_in_file__c: vars.countFullPayload
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="064cb69b-c8c5-4e83-a730-ab7e04291dae" name="SetStatuses" />
				<ee:transform doc:name="split Payloads (3)" doc:id="0774c309-6645-4e41-b845-33df4e0dc642">
			<ee:message>
			</ee:message>
			<ee:variables>
						<ee:set-variable variableName="buildingPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type35Building: payload.FRPPData.*Type35Building filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="landPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type20Land: payload.FRPPData.*Type20Land filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="structurePayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type40Structure:  payload.FRPPData.*Type40Structure filter ($ != null)
	} 
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<set-payload value="#[null]" doc:name="remove Payload" doc:id="5fb9fa08-f617-4223-b054-0eecdcf3d058" />
				<flow-ref doc:name="processAllBatches" doc:id="fcaba221-2a7f-402b-819a-13b1911643ca" name="processAllBatches" />
			</otherwise>
		</choice>
		<choice doc:name="Choice - Final Status" doc:id="9bb00899-0352-45fa-9245-43636f9bff98">
					<when expression='#[vars.setFinalStatus != "false" and vars.setFinalStatus != "none"]'>
						<ee:transform doc:name="setFinalStatus" doc:id="8365b468-04ac-4a33-b94f-4c15fcc3e889">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2'), // COMPLETED
	CI_FILE_STATUS__c: p('file.status1') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="9be70403-e6e4-4678-b251-74b91fb8d7c4" name="SetStatuses" />
				<salesforce:query doc:name="Query - SF Counts" doc:id="c9c95458-ed0b-4fd7-851a-34e9d31ff400" config-ref="SalesforceGeoFL3_Global" target="countSFAssets">
				<salesforce:salesforce-query>Select ID, Number_of_assets_in_file__c, Number_of_processed_assets__c from FRPP_FILE__c where ID = ':fileId'</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"fileId" : vars.file.Id
}]]]></salesforce:parameters>
			</salesforce:query>
				<choice doc:name="Choice - SF Count Check" doc:id="9189c884-b8ad-48e8-8381-6a3d125aa012">
			<when expression="#[vars.countSFAssets[0].Number_of_assets_in_file__c == vars.countSFAssets[0].Number_of_processed_assets__c]">
						<logger level="INFO" doc:name="Success Logger" doc:id="0516b735-f1d1-4527-9b65-ffb0ca4c51ee" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4a. fileSplitter completed processing successfully." />
			</when>
			<otherwise>
				<set-variable value="${InvalidFileDroppedRecordsUserEmail}" doc:name="set useTemplateName" doc:id="740a9ce7-bb0d-4463-b6f7-e0e9fc94bf28" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="0ec8fe7f-d424-4f8d-a25d-4071f1adf6b4" name="userEmailNotificationFlow" />
						<logger level="INFO" doc:name="Error Logger" doc:id="aeca5c48-077a-4407-9f2a-0a6f375c4179" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4b. fileSplitter completed processing with Error: Count Mismatch." />
			</otherwise>
		</choice>
					</when>
					<when expression='#[vars.setFinalStatus == "false"]'>
				<ee:transform doc:name="setFinalStatus" doc:id="e37e8711-1254-4117-9418-cb1e5ed31f4d">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status4'),  //status4=Invalid Xml File
	CI_STATUS__c : p('CI.status3') // CI.status3=Invalid Xml File
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="e6b197d2-c8e1-4741-aac8-e17fb10513ba" name="SetStatuses" />
				<logger level="INFO" doc:name="Error Logger" doc:id="df19058a-4641-436a-a05a-b9c156f8f1ca" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4c. fileSplitter completed processing with ERRORS." />
					</when>
			<otherwise>
				<remove-variable doc:name="Remove Variable" doc:id="5fb5f50f-40c2-4611-8241-0e0934a4edc7" variableName="setFinalStatus" />
					</otherwise>
				</choice>
		<flow-ref doc:name="releaseQueue" doc:id="8e27d369-d520-475b-a680-0e0439d25dce" name="releaseQueue"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="2ca3b154-3dba-4bbf-8310-c6812d9c5c0c" >
				<flow-ref doc:name="releaseQueue" doc:id="d0b56594-31b9-43cc-96dd-b762706d0a96" name="releaseQueue" />
				<logger level="INFO" doc:name="Error Log" doc:id="5db39590-634d-487b-8c04-92329aa2ee84" message="ERROR:  Error Type: #[error.errorType],  ErrorDescription: #[error.detailedDescription], ErrorCause: #[error.exception.cause]  for FileName:  #[vars.fileName]" />
				<ee:transform doc:name="setFinalStatus" doc:id="e88aad54-bd47-419c-b836-6e7758d924c8">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status5'),  //status5=Error during processing
	CI_STATUS__c : p('CI.status4') //CI.status4=ERRORED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="08938dbe-6a95-467a-87d2-b5edc3837881" name="SetStatuses" />
				<ee:transform doc:name="set error Msg" doc:id="04951393-53e6-4794-aea1-8e848175a92c">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="errorMsg"><![CDATA[%dw 2.0
output application/java
---
[
  ("ErrorType:   " ++ error.errorType.namespace ++ ":" ++ error.errorType.identifier), 	
  ("Description: " ++ error.detailedDescription),
  ("ErrorCause: "  ++ error.exception.cause.exceptionCode ++ " - " ++ error.exception.cause.exceptionMessage) if (error.exception.cause.exceptionCode != null and error.exception.cause.exceptionMessage != null )
  
]
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='#["Error occured during processing the File:  " ++ vars.fileName ++". \n\nPlease find attached error details."]' doc:name="email Body" doc:id="f03e4f98-078c-4662-a89d-310a4103f9c3" variableName="emailBody"/>
				<flow-ref doc:name="supportEmailNotificationFlow" doc:id="e60657d8-3294-450e-83eb-78d8623e4de4" name="supportEmailNotificationFlow" />
				
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="processAllBatches" doc:id="351dd7c4-4dff-4c42-b76d-edebe16db537" >
		<ee:transform doc:name="Initialize Thread Variables" doc:id="73ffaa9c-0f0d-4d09-9183-dfa62d7d2051" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="BUILDING" doc:id="6f4b1abb-8345-4f0a-9ce5-80ca6c6a32b4" >
			<when expression='#[vars.buildingPayload.FRPPData.Type35Building.RealPropertyType != null and vars.buildingPayload.FRPPData.Type35Building.RealPropertyType != ""]'>
				<foreach doc:name="For Each - Building Batch Processing" doc:id="4ae01c90-8b19-4447-8c12-6060554e4f77" collection="#[vars.buildingPayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize BUILDING Batch Processing (3)" doc:id="eaed9905-bb0d-4e70-9467-8f86e8a6c409">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Building"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="7e929cce-f0ae-43ef-9689-f4999d396463" >
						<flow-ref doc:name="Process SingleBatch" doc:id="06c140c0-4f5b-45e1-afa6-525f8ecc7bdf" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="9a85d82a-8833-4034-b71b-9c345e577241" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="7295703f-3c3a-419f-b1d2-7ad1a3046fda">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.buildingPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="ed2e5dc6-3dc1-47df-82f2-cec4f3648254" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Buildings" doc:id="09d2e7b9-9560-4d03-b6cc-d7dafd2f9192" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Building on the File."/>
			</otherwise>
		</choice>
		
		<remove-variable doc:name="Remove buildingPayload" doc:id="f15f775a-5e1d-48f0-9feb-dddd66a4bec8" variableName="buildingPayload"/>
		<ee:transform doc:name="Initialize Thread Variables" doc:id="16e7c183-c3f5-4687-a08b-044bf10ded0d" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="LAND" doc:id="6c7788ec-f755-4e71-9d56-2df1ab7b2b52" >
			<when expression='#[vars.landPayload.FRPPData.Type20Land.RealPropertyType != null and vars.landPayload.FRPPData.Type20Land.RealPropertyType != ""]'>
				<foreach doc:name="For Each - Land Batch Processing" doc:id="c3c80e87-cf02-4cf4-948e-30d9795849f3" collection="#[vars.landPayload.FRPPData]" batchSize="${batch.size}">
					<ee:transform doc:name="Initialize LAND Batch Processing (3)" doc:id="6efd0978-a2b6-4414-94f9-87381f1e4074">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Land"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="cbd656a2-bbcd-4e4c-8ec1-b73e6d63444f">
						<flow-ref doc:name="Process SingleBatch" doc:id="66bd4712-8dad-44d6-a76f-dfd6694f4b29" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="5809210e-9c81-4192-842f-87eaa4b111ee" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="8d6413bb-eb15-47b4-8021-131bfecdf9d4">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.landPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="67b6fb9b-a099-4bb0-9678-bd2f7a713ae4" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Lands" doc:id="c781db08-704d-4fec-a6c5-24d10b5181e6" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Land on the File." />
			</otherwise>
		</choice>
		
		<remove-variable doc:name="Remove landPayload" doc:id="c14e3dc3-2dc4-42da-b509-c7d20d10ebfa" variableName="landPayload"/>
		<ee:transform doc:name="Initialize Thread Variables" doc:id="e3dc0c59-f029-4684-85ed-81ffa94451c7" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="STRUCTURE" doc:id="f8873547-6634-4175-8a51-f31265d2f761" >
			<when expression='#[vars.structurePayload.FRPPData.Type40Structure.RealPropertyType != null and vars.structurePayload.FRPPData.Type40Structure.RealPropertyType != ""]'>
				<foreach doc:name="For Each - Structure Batch Processing" doc:id="b4b388ec-bb16-4223-a4a0-ed18a83478a7" collection="#[vars.structurePayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize STRUCTURE   Batch Processing (3)" doc:id="b5d67627-8012-446e-a492-92f3381be587">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Structure"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="0ca9f368-69e6-455b-a71a-20204f4094e6" >
						<flow-ref doc:name="Process SingleBatch" doc:id="f19cabb0-226d-4a19-a818-c42e918feeae" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="a20a3f7b-3770-4524-bd15-13611e1bd710" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="e1767920-7b55-44be-8d0a-0ad249ca194d">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.structurePayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="ad7f3713-1348-4720-8cc6-077072d5e446" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Structure" doc:id="73caae99-e693-4769-bbdc-0f72dbb4a6e2" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Structure on the File." />
			</otherwise>
		</choice>
		<remove-variable doc:name="Remove structurePayload" doc:id="dcf72d10-d815-4492-a672-b3b83c76426a" variableName="structurePayload"/>

	</sub-flow>
	
	<sub-flow name="processSingleBatch" doc:id="101d6b76-badc-4ee8-97bb-e67d03bbc11f">
		<logger level="INFO" doc:name="Thread Started" doc:id="d45bd4ae-a6ca-4e17-ab46-f85e0b687d4e" message="Thread:  #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Started" />
		<flow-ref doc:name="buildSFPayloads" doc:id="a1d40c6e-56e7-48c9-98f9-5a39c52faa75" name="buildSFPayloads" />
		<ee:transform doc:name="Transform Message" doc:id="bf4c405d-6a1c-4648-aefb-5ceb1a20f476">
					<ee:message>
					</ee:message>
					<ee:variables>
				<ee:set-variable variableName="vmResponse"><![CDATA[%dw 2.0
output application/java
---
{
	"threadId" : p('thread.maxThreads') - vars.threadPoolSize + 1,
	"status": "success",
	 "countRecordSuccessAdded" : vars.countSuccessASTAdded,
	 "countRecordErrorAdded" : vars.countErrorASTAdded
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
		<logger level="INFO" doc:name="Thread publishes" doc:id="b8b068cb-ac5b-4427-b086-08987cd4376e" message="Thread: #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Publishes: #[vars.vmResponse]" />
		<vm:publish doc:name="Publish Thread Response" doc:id="636a9d53-cd76-4f2f-a17e-a695c871762c" config-ref="VM_Batch_Config" sendCorrelationId="AUTO" queueName="#[vars.queueName]">
			<vm:content><![CDATA[#[vars.vmResponse]]]></vm:content>
				</vm:publish>
	</sub-flow>
		
	<sub-flow name="buildSFPayloads" doc:id="39580cf4-cdd3-4e8b-868c-8eb0629bf164" >
		<choice doc:name="Buildings" doc:id="a5417eab-51b4-457c-9361-5b782e2a300a">
			<when expression="#[vars.'proceed?' == null]">
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="ef68e197-c4b4-4ff6-a47b-82d38f5ff825">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1') //STARTED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="ffddeaef-c9db-4c19-a4f2-39d2c1d6d0bb" name="SetStatuses" />
				<choice doc:name="assetType" doc:id="314353b6-7dbe-4226-b624-4d6de5fae4b5">
					<when expression='#[vars.assetType == "Building"]'>
						<ee:transform doc:name="BuildingSFPayload" doc:id="d8c728e0-77c6-43f4-8608-d7f05f70584f">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---
payload.*Type35Building filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	Field_Office_Code__c : $.FieldOffice,
	Field_Office_Collocation_Code__c : $.FieldOfficeCollocation,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	SquareFeet__c :  $.Size.SquareFeet,
	SquareFeetUnitOfMeasure_Code__c : $.Size.SquareFeetUnitOfMeasure,
	Year_Asset_Reported_Underutilized__c : $.YearAssetReportedUnderutilized,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	Asset_Height__c : $.AssetHeight,
	Asset_Height_Range__c : $.AssetHeightRange,
	UtilizationCode__c : $.Utilization,
	FederalEmployees__c : $.Personnel.FederalEmployees,
	FederalContractors__c : $.Personnel.FederalContractors,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	Determine_Number_of_Fed_Employees_Code__c : $.CanNumberOfFederalEmployeesBeDetermined,
	Determine_Number_of_Fed_Contractors_Code__c : $.CanNumberOfFederalContractorsBeDetermined,
	SustainabilityCode__c : $.IsSustainable,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<when expression='#[vars.assetType == "Land"]'>
						<ee:transform doc:name="LandSFPayload" doc:id="ed08ed9d-2a53-4d74-85c1-040202813d9d">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---
payload.*Type20Land filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Acres__c : $.Size.Acres as Number,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	UtilizationCode__c : $.Utilization,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.landPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<when expression='#[vars.assetType == "Structure"]'>
						<ee:transform doc:name="StructureSFPayload" doc:id="c12f4c37-8f22-487e-83e2-40efd2ff2751">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---
payload.*Type40Structure filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	StructuralUnits__c : $.Size.StructuralUnit,
	UnitOfMeasure__c : $.Size.UnitOfMeasure,
	Asset_Height__c : $.AssetHeight,
	Asset_Height_Range__c : $.AssetHeightRange,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.structurePayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="229c730b-ee16-4afb-924d-836a22ee144a" message="No AssetType Set.  "/>
					</otherwise>
				</choice>
				<flow-ref doc:name="payload to SF" doc:id="93bf7410-4aae-4223-8005-46ef4667554a" name="sendSFPayload" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="223554ba-78c5-4807-bf17-d7e39e3a0ef7" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Had Errors other then Validation Errors. Exiting out." />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sendSFPayload" doc:id="ea6a61df-6392-430d-be69-9831c4e005d3" >
			<salesforce:create type="FRPP_ASSET__c" doc:name="Create Assets" doc:id="e7015089-cc49-4b17-90d0-40fdd5b0282f" config-ref="SalesforceGeoFL3_Global" target="sfResponse">
				<salesforce:records ><![CDATA[#[vars.sfAssetsPayload]]]></salesforce:records>
			</salesforce:create>
		<choice doc:name="Choice" doc:id="ad0785ea-0651-4697-98f6-65e1f7a8470b" >
				<when expression='sizeOf (flatten(vars.sfResponse.errors) filter ($.statusCode != "FIELD_CUSTOM_VALIDATION_EXCEPTION" )) &lt; 1'>
				<ee:transform doc:name="ErrorAssets +ErrorCounts (2)" doc:id="b5e74bcc-d5a9-4d3f-bc56-afc3dc25aa62">
				<ee:message>
				</ee:message>
				<ee:variables>
						<ee:set-variable variableName="countSuccessASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countSuccessASTAdded) + (sizeOf (vars.sfResponse.*id filter ($ != null)))]]></ee:set-variable>
						<ee:set-variable variableName="sfErrorAssestsPayload" ><![CDATA[%dw 2.0
output application/java
---
vars.sfAssetsPayload filter (vars.sfResponse.id[$$] == null) map (
	$ ++
	{
	  CI_FLAG__c: "Y"	
	})
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
				<remove-variable doc:name="Remove sfAssetsPayload" doc:id="fa43275a-8561-402f-84a3-9915cb9c8e15" variableName="sfAssetsPayload"/>
				<choice doc:name="Choice" doc:id="87c0860d-6933-4a59-acaf-b0dfa10095d3">
					<when expression="#[sizeOf (vars.sfResponse.*id filter ($ == null)) &gt; 0]">
						<salesforce:create doc:name="Create Error Assets" doc:id="1438d215-7490-436f-815c-bf9efce7aa03" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET__c" target="sfErrorAssestsResponse">
					<salesforce:records><![CDATA[#[vars.sfErrorAssestsPayload]]]></salesforce:records>
				</salesforce:create>
						<ee:transform doc:name="Errors Mapping (2)" doc:id="6f6a5011-1b81-4455-a803-990983e622de">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
vars.sfResponse filter ($.id == null) map ((a,aIndex) -> {
 errors: a.errors map ((b,bIndex) -> {
 	
	ASSETTYPE__c: vars.assetType, 
	Agency_Code__c: vars.file.AGENCY_CODE__c,
	ERROR_FIELD__c: b.fields[0],
	ERROR_MESSAGE__c: b.message,
   	FILE_ID__c: vars.file.Id,
	FRPP_ASSET_ID__c: vars.sfErrorAssestsResponse[aIndex].id
     })
})]]></ee:set-variable>
								<ee:set-variable variableName="countErrorASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countErrorASTAdded) + (sizeOf (vars.sfErrorAssestsResponse.*id filter ($ != null)))]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<ee:transform doc:name="flatten Payload" doc:id="fa369920-2eff-4ca2-986a-58c09d69cab4">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
flatten (vars.sfErrorsPayload.errors)]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<foreach doc:name="For Each 200 Batch" doc:id="62a70701-95b0-47bd-a66f-0df21a2891f3" collection="#[vars.sfErrorsPayload]" batchSize="200">
							<ee:transform doc:name="Transform To JSON" doc:id="60575e87-d792-433c-a698-704e4e3406db" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
								</ee:message>
							</ee:transform>
							<salesforce:create doc:name="Create Errors" doc:id="f176a857-7b12-480a-9140-42c2da972fa6" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET_ERROR__c" target="sfErrorsResponse">
				</salesforce:create>
						</foreach>
						<logger level="INFO" doc:name="Error Logger" doc:id="c9368328-efd0-4911-8951-35678c6a3553" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3b. #[vars.assetType] Batch No.: #[vars.counter] ALL Err records processed Succesfully."/>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Success Logger" doc:id="8314e425-eb22-41cb-9198-f3b153f831c7" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3a. #[vars.assetType] Batch No.: #[vars.counter] ALL records processed Succesfully."/>
					</otherwise>
				</choice>
				<ee:transform doc:name="Set BatchCompletion Statuses" doc:id="d6e9076d-f39b-459a-8427-f41336cd4da7">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<flow-ref doc:name="SetFileStatus" doc:id="74c5fca4-5a3a-4881-93ed-c2bdb4da95f2" name="SetStatuses" />
				</when>
				<otherwise >
					<logger level="INFO" doc:name="Validation Errors" doc:id="be4a7abb-092a-46e1-b335-727c6bb94d16" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR:  Received SF error other then Validation Error.  Need to Exit."/>
				<set-variable value="false" doc:name="Set proceed? to false" doc:id="352e2c86-65bc-4a9e-af87-1b4d4367946a" variableName="proceed?" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="40872a9f-c39f-4d4e-959a-e54a6b0b17af" variableName="useTemplateName" />
				<ee:transform doc:name="set error Msg" doc:id="c58042d4-a9c7-48a7-95b4-85be2293fed6">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["Received SF error other then Validation Error."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="5d98b251-9f30-4bbb-a99c-e8829f887dcf" name="userEmailNotificationFlow" />
				<ee:transform doc:name="set error Msg" doc:id="1f298cb5-0bed-4650-a48d-8150171e8b49">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["Received SF error other then Validation Error."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='Received SF error other then Validation Error.' doc:name="email Body" doc:id="eaa26632-e183-405c-81ce-f4bf50b0dd31" variableName="emailBody"/>
				<flow-ref doc:name="SupportEmail" doc:id="199592b4-9353-47d6-96ba-b06daecc99bc" name="supportEmailNotificationFlow" />
				
				</otherwise>
			</choice>
	</sub-flow>
</mule>
