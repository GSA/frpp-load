<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="fileSplitter_main" doc:id="cf067773-cc74-4f23-bfdc-10438110b0dc">
		<logger level="INFO" doc:name="1.Process Started" doc:id="13bd62ef-3c86-4dfc-9b5c-a06a5c51627d" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 1.Process Started"/>
		<ee:transform doc:name="Set Status To Processing" doc:id="79e9322b-4703-42a6-825b-4b28a88a14fa" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="updateStatusReq" ><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status1')   //Processing
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="SetFileStatus" doc:id="1c673190-ed2a-4841-b83f-5122815d28fb" name="SetStatuses"/>
		<salesforce:query doc:name="Read File Attachment" doc:id="26b49587-4b32-40e5-b0b6-b7f31af796d8" config-ref="SalesforceGeoFL3_Global">
			<salesforce:salesforce-query>SELECT Id, Body FROM Attachment where Id= ':attachmentId'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"attachmentId" : vars.file.Attachment_ID__c
}]]]></salesforce:parameters>
		</salesforce:query>
 <set-payload value="#[payload[0].Body]" doc:name="Read XML Payload" doc:id="8016f572-3514-49a9-b3c3-6fb48c29d73c" mimeType="text/xml" />
		<ee:transform doc:name="Transform Input To XML(2)" doc:id="d5adb62a-a975-4e10-9cc5-c4d913b0e8f3">
			<ee:message>
			</ee:message>
					<ee:variables>
						<ee:set-variable variableName="fullPayload"><![CDATA[%dw 2.0
output application/xml
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="countFullPayload" ><![CDATA[%dw 2.0
output application/java
---
sizeOf (payload.FRPPData)]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
		<flow-ref doc:name="authorizeToDelete" doc:id="4b3b5e81-e0a9-4d2f-9ac5-3224eeb7cd7f" name="authorizeToDelete" />
		<flow-ref doc:name="Validate XML" doc:id="073f6199-5e77-43d6-a0a0-9cf935b788ba" name="schemaValidationFlow" />
		<choice doc:name="Choice-Check Validations" doc:id="39726dc8-5d24-449a-9daa-2d9bd0369599" >
			<when expression='#[vars.validXML != "true"]'>
				<logger level="INFO" doc:name="XML Validation Failed" doc:id="8ed5f8d8-0492-4a60-8a5b-1a643e1ae5e8" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: XML Schema Validation Failed." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="afcfd288-1eb9-4bd8-8d44-fff281711380" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLTemplateName}" doc:name="set useTemplateName" doc:id="98324958-7949-4b8b-b954-a4a071d3fd4c" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="b84137dc-641c-45b0-91bd-3ff9092b30ed" name="userEmailNotificationFlow" />
			</when>
			<when expression="#['${current.fiscalYear}'  != vars.fullPayload.FRPPData.@FY]">
				<logger level="INFO" doc:name="FY Invalid" doc:id="bd8d2633-ad9c-42b4-8829-536bff19bc53" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Fiscal Year Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="af02bbfa-222e-424f-8872-815d09db116d" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="fcfb2fd2-c0d2-4fd1-8a34-c438c4da1da5" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="1dd0fb7c-8307-4e06-9373-d650db2dc475" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[vars.file.AGENCY_CODE__c  != vars.fullPayload.FRPPData.@AGENCYCODE]'>
				<logger level="INFO" doc:name="AgencyCode Invalid" doc:id="42e690d2-cf5c-47be-9a5d-05d0a80ee844" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Agency Code Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="baa98dfd-8422-42e9-ac7a-8e9ecedd7205" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLAgencyTemplateName}" doc:name="set useTemplateName" doc:id="34adf73f-36b6-4e49-b764-7237556b6ecd" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="f1ded7a7-1257-436f-a69c-ad48b9952514" name="userEmailNotificationFlow" />
			</when>
			<when expression='#[(vars.fullPayload.FRPPData.@ACTION != "DELETE") and (vars.fullPayload.FRPPData.@ACTION !=  "ADD") and  (vars.fullPayload.FRPPData.@ACTION !=  "MODIFY")]' doc:id="26e6abd2-53da-4902-b19d-72aaf7de66b0">
				<logger level="INFO" doc:name="Action Invalid" doc:id="ea529133-dd53-4736-8f47-7031962cf626" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Action Invalid." />
				<set-variable value="false" doc:name="Set final Status Flag" doc:id="76828de9-4371-4099-a989-60bf3cce9711" variableName="setFinalStatus" />
				<set-variable value="${InvalidXMLActionTemplateName}" doc:name="set useTemplateName" doc:id="ce6b0ba1-90e6-4c30-9ad5-6d70353d779f" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="9d57d2a9-768f-4d06-af73-1a782f054570" name="userEmailNotificationFlow" />
			</when>
			<when expression="#[(vars.&quot;authorizedToDelete?&quot; == 'false')]" doc:id="1d2dea19-e9ed-468c-8d68-769e5aade62b">
				<logger level="INFO" doc:name="No Access To Delete" doc:id="170cf91f-b3c6-4e2b-a913-4eeb5a7d9e2d" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: No Access to Delete." />
				<set-variable value="none" doc:name="Set final Status Flag" doc:id="cf5b86a7-27ed-4a0b-807a-95605a289aa5" variableName="setFinalStatus" />
				
				<ee:transform doc:name="setFinalStatus" doc:id="a6235282-3f3b-4df8-829f-b8b2be08aee4">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status6'),  //status6=No Access To Delete
	CI_STATUS__c : p('CI.status6') // CI.status6=No Access To Delete
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="2e5474fe-fa37-4d1f-96f0-a74ff7268bd8" name="SetStatuses" />
				
			</when>
			<otherwise >
				<remove-variable doc:name="Remove Variable validXML" doc:id="13eeb7e5-23a3-496d-9b03-4445f66ca482" variableName="validXML" />
				<logger level="INFO" doc:name="Valid XML" doc:id="8874fd66-f2f5-4a5b-9c09-9a2442817012" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 2.VALID XML Payload." />
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="5ae3a7b8-4731-473e-a08c-f4c3ffb24f3c">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1'), //STARTED
	Number_of_assets_in_file__c: vars.countFullPayload
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="236770f2-807e-478e-8f89-0340378b5676" name="SetStatuses" />
				<ee:transform doc:name="split Payloads (3)" doc:id="12a5ef4c-6d2a-484e-866e-c8444215d3da">
			<ee:message>
			</ee:message>
			<ee:variables>
						<ee:set-variable variableName="buildingPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type35Building: payload.FRPPData.*Type35Building filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="landPayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type20Land: payload.FRPPData.*Type20Land filter ($ != null)
	}
}]]></ee:set-variable>
								<ee:set-variable variableName="structurePayload"><![CDATA[%dw 2.0
output application/xml skipNullOn="everywhere", inlineCloseOn="empty"
---
{
	FRPPData @(AGENCYCODE: payload.FRPPData.@AGENCYCODE , ACTION: payload.FRPPData.@ACTION , FY: payload.FRPPData.@FY):{
		Type40Structure: payload.FRPPData.*Type40Structure filter ($ != null)
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="processAllBatches" doc:id="a25453e4-bc7a-461b-82d0-1bf213e9ee7e" name="processAllBatches" />
			</otherwise>
		</choice>
		<choice doc:name="Choice - Final Status" doc:id="63f0fe6e-4d97-4365-8132-5388eb78d113">
					<when expression='#[vars.setFinalStatus != "false" and vars.setFinalStatus != "none"]'>
						<ee:transform doc:name="setFinalStatus" doc:id="5bdbcbfb-3cd8-4812-b76f-0b39dc1bdab0">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2'), // COMPLETED
	CI_FILE_STATUS__c: p('file.status1') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="a135b1a3-294f-4ba9-9e07-7028c14f768f" name="SetStatuses" />
				<salesforce:query doc:name="Query - SF Counts" doc:id="0f7f69bf-97ce-466c-a1a0-efaa054f12f5" config-ref="SalesforceGeoFL3_Global" target="countSFAssets">
				<salesforce:salesforce-query>Select ID, Number_of_assets_in_file__c, Number_of_processed_assets__c from FRPP_FILE__c where ID = ':fileId'</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"fileId" : vars.file.Id
}]]]></salesforce:parameters>
			</salesforce:query>
				<choice doc:name="Choice - SF Count Check" doc:id="6be537ea-30e1-41ec-8331-fa203fda9208">
			<when expression="#[vars.countSFAssets[0].Number_of_assets_in_file__c == vars.countSFAssets[0].Number_of_processed_assets__c]">
						<logger level="INFO" doc:name="Success Logger" doc:id="df523451-36df-43b0-a74b-0979295bd6e6" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4a. fileSplitter completed processing successfully." />
			</when>
			<otherwise>
				<set-variable value="${InvalidFileDroppedRecordsUserEmail}" doc:name="set useTemplateName" doc:id="e70a3d1b-33e9-4101-81fd-75beed13ef66" variableName="useTemplateName" />
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="03c2a162-f731-4b1d-8246-8bdb7980da2b" name="userEmailNotificationFlow" />
						<logger level="INFO" doc:name="Error Logger" doc:id="23407667-ce30-49ae-81d8-f1f891e5d772" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4b. fileSplitter completed processing with Error: Count Mismatch." />
			</otherwise>
		</choice>
					</when>
					<when expression='#[vars.setFinalStatus == "false"]'>
				<ee:transform doc:name="setFinalStatus" doc:id="1facf9de-adfb-4ef3-a5b6-97561cc88b37">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status4'),  //status4=Invalid Xml File
	CI_STATUS__c : p('CI.status3') // CI.status3=Invalid Xml File
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="46e81c33-b57d-4b24-af0f-be4994e4feaa" name="SetStatuses" />
				<logger level="INFO" doc:name="Error Logger" doc:id="cb1bd05a-ad22-403d-81a4-f24dc86f7529" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 4c. fileSplitter completed processing with ERRORS." />
					</when>
			<otherwise>
				<remove-variable doc:name="Remove Variable" doc:id="42810adc-41a4-4317-ada5-0b11e36abfb3" variableName="setFinalStatus" />
					</otherwise>
				</choice>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e04c82f0-d61e-410d-99bc-6485698c31a8" >
				<logger level="INFO" doc:name="Error Log" doc:id="3689f545-46e0-4d07-9f16-bfc8f5a40fd6" message="ERROR:  Error Type: #[error.errorType],  ErrorDescription: #[error.detailedDescription], ErrorCause: #[error.exception.cause]  for FileName:  #[vars.fileName]" />
				<ee:transform doc:name="setFinalStatus" doc:id="8868a4d4-fc6c-40af-901d-b2ef5f0c9d6a">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status5'),  //status5=Error during processing
	CI_STATUS__c : p('CI.status4') //CI.status4=ERRORED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
						<flow-ref doc:name="SetFileStatus" doc:id="95011655-405c-466c-81f1-9a26c5250686" name="SetStatuses" />
				<ee:transform doc:name="set error Msg" doc:id="c9a70deb-c3d3-4a43-b6af-e233c55b68b7">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
[
  ("ErrorType:   " ++ error.errorType.namespace ++ ":" ++ error.errorType.identifier), 	
  ("Description: " ++ error.detailedDescription),
  ("ErrorCause: "  ++ error.exception.cause.exceptionCode ++ " - " ++ error.exception.cause.exceptionMessage)
  
]

]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='#["Error occured during processing the File:  " ++ vars.fileName ++". \n\nPlease find attached error details."]' doc:name="email Body" doc:id="8a0bcc3f-f8c7-4fba-8525-6b40238217cd" variableName="emailBody"/>
				<flow-ref doc:name="supportEmailNotificationFlow" doc:id="9e4911df-1b32-4f66-9c2f-8ee86947c188" name="supportEmailNotificationFlow" />
				
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="processAllBatches" doc:id="529e1996-cf4e-4c41-8bae-322918c9d175" >
		<ee:transform doc:name="Initialize Thread Variables" doc:id="c46026b7-1275-4904-afe3-9990020addb4" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="BUILDING" doc:id="2d75d3d0-74d7-4d56-ae7d-9da56db27f41" >
			<when expression='#[vars.buildingPayload.FRPPData != null and vars.buildingPayload.FRPPData != ""]'>
				<foreach doc:name="For Each - Building Batch Processing" doc:id="8f85f422-f3cf-463e-adf0-4c12360922b4" collection="#[vars.buildingPayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize BUILDING Batch Processing (3)" doc:id="260dfb97-0eed-424b-92eb-17f5bfff1357">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Building"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="723efa69-156f-4390-8835-3f199d97046e" >
						<flow-ref doc:name="Process SingleBatch" doc:id="fbc1fad7-3d86-42fb-bc76-f6a42193792f" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="4fc84fa6-abf6-40bb-b69b-253a3e4653fc" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="7461177c-7fc4-445a-8308-408ccfbbd70f">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.buildingPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="ec416efb-d3c4-43c1-9b99-7eb216b455c6" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Buildings" doc:id="0b5d9b4a-8bc4-4df8-baf7-1ded8b347163" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Building on the File."/>
			</otherwise>
		</choice>
		
		<ee:transform doc:name="Initialize Thread Variables" doc:id="b6958655-9b67-4ca5-bfeb-21eaf8cf6365" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="LAND" doc:id="375b5c0c-6234-422b-a86e-d46dceaf09d7" >
			<when expression='#[vars.landPayload.FRPPData != null and vars.landPayload.FRPPData != ""]'>
				<foreach doc:name="For Each - Land Batch Processing" doc:id="ab8699b4-5df3-418a-9c94-f9d902388a79" collection="#[vars.landPayload.FRPPData]" batchSize="${batch.size}">
					<ee:transform doc:name="Initialize LAND Batch Processing (3)" doc:id="c08e90f4-717d-4d98-ae1c-24530ff6a7a3">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Land"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="b1a5e714-20c1-45f5-b810-1ef5b071c01f">
						<flow-ref doc:name="Process SingleBatch" doc:id="b12046e8-1dfe-45f9-9929-b51d879d51f6" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="a1cbdf63-7345-4421-9dbf-b906fb9b8e75" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="caa807c5-9abf-4276-bca5-0ca95b5d6560">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.landPayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="2188b8c9-6078-4f97-befc-2e9bbdb62e93" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Lands" doc:id="bde64582-72e2-488d-8c15-8458b203c0fe" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Land on the File." />
			</otherwise>
		</choice>
		
		<ee:transform doc:name="Initialize Thread Variables" doc:id="9629a1ed-1698-477b-8847-11001bddf824" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="threadPoolSize" ><![CDATA[%dw 2.0
output application/java
---
p('thread.maxThreads')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="STRUCTURE" doc:id="abd34858-da84-4584-8cb6-23d7923843a3" >
			<when expression='#[vars.structurePayload.FRPPData != null and vars.structurePayload.FRPPData != ""]'>
				<foreach doc:name="For Each - Structure Batch Processing" doc:id="1f8f50f7-bb0b-442f-9f1c-a9d2d07b0040" collection="#[vars.structurePayload.FRPPData]" batchSize="${batch.size}">
			<ee:transform doc:name="Initialize STRUCTURE   Batch Processing (3)" doc:id="cfbffb77-bc35-435c-bd55-1035b25b2a96">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="countSuccessASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="countErrorASTAdded"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="assetType"><![CDATA[%dw 2.0
output application/java
---
"Structure"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<async doc:name="Async" doc:id="0d07a769-48e2-4259-a862-b74d2fa37347" >
						<flow-ref doc:name="Process SingleBatch" doc:id="56ffd3bf-f0c1-47b5-8410-e6de685eab2c" name="processSingleBatch" />
					</async>
					<set-variable value="#[vars.threadPoolSize -1]" doc:name="Reduce Thread pool" doc:id="272c2dc4-df98-498d-8860-8c003eea2c44" variableName="threadPoolSize" />
					<choice doc:name="Time to Process Responses?" doc:id="72a7a916-73cf-4761-92c3-02aa70e2c014">
						<when expression="#[(vars.threadPoolSize == 0) or ((vars.counter * p('batch.size')) &gt;= sizeOf(vars.structurePayload.FRPPData) )]">
							<flow-ref doc:name="Process Responses" doc:id="fadc0713-7b87-41f4-8ef3-0d6beb47a4a3" name="ProcessAllBatchReponses" />
						</when>
					</choice>
			
		</foreach>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="No Structure" doc:id="11adad05-592b-4815-9968-8a577c83e9cc" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; No Structure on the File." />
			</otherwise>
		</choice>

	</sub-flow>
	
	<sub-flow name="processSingleBatch" doc:id="edac180d-cfad-4e6c-be9a-debaabd5ab6a">
		<logger level="INFO" doc:name="Thread Started" doc:id="865f0a1a-b59b-4012-b9c1-241842c614a1" message="Thread:  #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Started" />
		<flow-ref doc:name="buildSFPayloads" doc:id="522124e6-f7b1-4b86-a6b5-2389dccb94d8" name="buildSFPayloads" />
		<ee:transform doc:name="Transform Message" doc:id="dc3a6f89-57d1-452a-9f4f-bba91d81f197">
					<ee:message>
					</ee:message>
					<ee:variables>
				<ee:set-variable variableName="vmResponse"><![CDATA[%dw 2.0
output application/java
---
{
	"threadId" : p('thread.maxThreads') - vars.threadPoolSize + 1,
	"status": "success",
	 "countRecordSuccessAdded" : vars.countSuccessASTAdded,
	 "countRecordErrorAdded" : vars.countErrorASTAdded
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
		<logger level="INFO" doc:name="Thread publishes" doc:id="acac30b9-987d-4f0f-8815-6b597415bb29" message="Thread: #[p('thread.maxThreads') - vars.threadPoolSize + 1]  Publishes: #[vars.vmResponse]" />
		<vm:publish doc:name="Publish Thread Response" doc:id="8833566d-7970-4472-b2f2-8226798068dd" config-ref="VM_Batch_Config" sendCorrelationId="AUTO" queueName="response">
			<vm:content><![CDATA[#[vars.vmResponse]]]></vm:content>
				</vm:publish>
	</sub-flow>
		
	<sub-flow name="buildSFPayloads" doc:id="ef15aed9-a99c-4c3c-add7-a343c7e2b05e" >
		<choice doc:name="Buildings" doc:id="40f2d7d0-887d-4ac5-92a6-91234b74bb6a">
			<when expression="#[vars.'proceed?' == null]">
				<ee:transform doc:name="Set CIStatus to STARTED" doc:id="bc790dbf-4585-4189-ac02-004f1bde9ed4">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	CI_STATUS__c : p('CI.status1') //STARTED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="SetFileStatus" doc:id="ddc57fde-a13a-4b69-8274-65ccc46eb1f9" name="SetStatuses" />
				<choice doc:name="assetType" doc:id="f5c069d4-c7b0-49d0-b5d2-92b1be0d989b">
					<when expression='#[vars.assetType == "Building"]'>
						<ee:transform doc:name="BuildingSFPayload" doc:id="b70546e5-ec2d-4cfe-9475-bb4fe6377781">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---

payload.*Type35Building filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	Field_Office_Code__c : $.FieldOffice,
	Field_Office_Collocation_Code__c : $.FieldOfficeCollocation,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	SquareFeet__c :  $.Size.SquareFeet,
	//SquareFeet__c : if ($.Size.SquareFeet != null) $.Size.SquareFeet as Number else null,
	SquareFeetUnitOfMeasure_Code__c : $.Size.SquareFeetUnitOfMeasure,
	Year_Asset_Reported_Underutilized__c : $.YearAssetReportedUnderutilized,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	//RecurringCost__c : $.AnnualOperatingCosts.ComponentCosts.TotalRecurringMaintRepairCost,
	//ElevatorCost__c : $.AnnualOperatingCosts.ComponentCosts.ElevatorCost,
	//HVACCost__c : $.AnnualOperatingCosts.ComponentCosts.HVACCost,
	//PlumbingCost__c : $.AnnualOperatingCosts.ComponentCosts.PlumbingCost,
	//TotalUtilitiesCost__c : $.AnnualOperatingCosts.ComponentCosts.TotalUtilitiesCost,
	//WaterSewageCost__c : $.AnnualOperatingCosts.ComponentCosts.WaterSewageCost,
	//ElectricityCost__c : $.AnnualOperatingCosts.ComponentCosts.ElectricityCost,
	//GasCost__c : $.AnnualOperatingCosts.ComponentCosts.GasCost,
	//SteamCost__c : $.AnnualOperatingCosts.ComponentCosts.SteamCost,
	//CleaningCost__c : $.AnnualOperatingCosts.ComponentCosts.CleaningJanitorialCost,
	//RoadsCost__c : $.AnnualOperatingCosts.ComponentCosts.RoadsGroundsKeepingCost,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	UtilizationCode__c : $.Utilization,
	FederalEmployees__c : $.Personnel.FederalEmployees,
	FederalContractors__c : $.Personnel.FederalContractors,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	Determine_Number_of_Fed_Employees_Code__c : $.CanNumberOfFederalEmployeesBeDetermined,
	Determine_Number_of_Fed_Contractors_Code__c : $.CanNumberOfFederalContractorsBeDetermined,
	SustainabilityCode__c : $.IsSustainable,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}

]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<when expression='#[vars.assetType == "Land"]'>
						<ee:transform doc:name="LandSFPayload" doc:id="71f0b405-d268-4917-8c1e-1e5396cfe328">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---

payload.*Type20Land filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Acres__c : $.Size.Acres as Number,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	//RecurringCost__c : $.AnnualOperatingCosts.ComponentCosts.TotalRecurringMaintRepairCost,
	//ElevatorCost__c : $.AnnualOperatingCosts.ComponentCosts.ElevatorCost,
	//HVACCost__c : $.AnnualOperatingCosts.ComponentCosts.HVACCost,
	//PlumbingCost__c : $.AnnualOperatingCosts.ComponentCosts.PlumbingCost,
	//TotalUtilitiesCost__c : $.AnnualOperatingCosts.ComponentCosts.TotalUtilitiesCost,
	//WaterSewageCost__c : $.AnnualOperatingCosts.ComponentCosts.WaterSewageCost,
	//ElectricityCost__c : $.AnnualOperatingCosts.ComponentCosts.ElectricityCost,
	//GasCost__c : $.AnnualOperatingCosts.ComponentCosts.GasCost,
	//SteamCost__c : $.AnnualOperatingCosts.ComponentCosts.SteamCost,
	//CleaningCost__c : $.AnnualOperatingCosts.ComponentCosts.CleaningJanitorialCost,
	//RoadsCost__c : $.AnnualOperatingCosts.ComponentCosts.RoadsGroundsKeepingCost,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	UtilizationCode__c : $.Utilization,
	FederalEmployees__c : $.Personnel.FederalEmployees,
	FederalContractors__c : $.Personnel.FederalContractors,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	Determine_Number_of_Fed_Employees_Code__c : $.CanNumberOfFederalEmployeesBeDetermined,
	Determine_Number_of_Fed_Contractors_Code__c : $.CanNumberOfFederalContractorsBeDetermined,
	SustainabilityCode__c : $.IsSustainable,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}

]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<when expression='#[vars.assetType == "Structure"]'>
						<ee:transform doc:name="StructureSFPayload" doc:id="03518c2a-4da7-4e2c-ab33-495f6d59125c">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable variableName="sfAssetsPayload"><![CDATA[%dw 2.0
output application/java
type sfDate = Date {format: "M/d/yyyy"}
---

payload.*Type40Structure filter ($ != null) map {
	Asset_Type_Code__c : $.RealPropertyType,
	RealPropertyUseCode__c : $.RealPropertyUse,
	LegalInterestCode__c : $.LegalInterest.LegalInterestIndicator,
	LeaseAuthorityCode__c : $.LegalInterest.LeaseAuthorityIndicator,
	AssetStatusCode__c : $.Status.StatusIndicator,
	SurplusDeclarationDate__c : if ($.Status.SurplusDeclarationDate != null) ($.Status.SurplusDeclarationDate as sfDate) else null,
	ReportofExcessSubmittedDate__c : if ($.Status.ReportOfExcessSubmittedDate != null) ($.Status.ReportOfExcessSubmittedDate as sfDate) else null,
	ReportofExcessAcceptedDate__c : if ($.Status.ReportOfExcessAcceptedDate != null) ($.Status.ReportOfExcessAcceptedDate as sfDate) else null,
	DeterminationtoDisposeDate__c : if ($.Status.DeterminationToDisposeDate != null) ($.Status.DeterminationToDisposeDate as sfDate) else null,
	Cannot_Currently_Be_Disposed_of_Date__c : if ($.Status.CannotCurrentlyBeDisposedDate != null) ($.Status.CannotCurrentlyBeDisposedDate as sfDate) else null,
	OutGrantIndicator__c : $.Status.OutgrantIndicator,
	CannotCurrentlyBeDisposed_Code__c : $.Status.CannotCurrentlyBeDisposed,
	HistoricalStatusCode__c : $.HistoricalStatus,
	ReportingAgencyCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [0 to 1] else null,
	ReportingBureauCode__c : if ($.ReportingAgency != null) ($.ReportingAgency) [2 to 3] else null,
	UsingAgencyCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [0 to 1] else null,
	UsingBureauCode__c : if ($.UsingOrganization != null) ($.UsingOrganization) [2 to 3] else null,
	LeaseExpirationDate__c : if ($.LeaseExpirationDate != null) ($.LeaseExpirationDate as sfDate) else null,
	Lease_Start_Date__c : if ($.LeaseStartDate != null) ($.LeaseStartDate as sfDate) else null,
	Lease_Occupancy_Date__c : if ($.LeaseOccupancyDate != null) $.LeaseOccupancyDate as sfDate else null,
	IsAsset_Excluded_Code__c : $.IsAssetExcluded,
	Exclusion_Reason_Code__c : $.ReasonForExclusion,
	Year_of_Construction__c : $.YearOfAssetConstruction,
	StructuralUnits__c : $.Size.StructuralUnit,
	UnitOfMeasure__c : $.Size.UnitOfMeasure,
	ReplacementValue__c : $.ReplacementValue,
	RepairNeeds__c : $.RepairNeeds,
	Historical_Capital_Expenditures__c : $.HistoricalCapitalExpenditures,
	Estimated_Future_Capital_Expenditures__c : $.EstimatedFutureCapitalExpenditures,
	Owned_and_Managed_Annual_Operations_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualOperatingCosts,
	Owned_and_Managed_Maintenance_Cost__c : $.AnnualOperatingCosts.OwnedandOtherwiseManagedAnnualMaintenanceCosts,
	Leased_Annual_Operations_Costs__c : $.AnnualOperatingCosts.LeasedAnnualOperatingCosts,
	Leased_Annual_Maintenance_Costs__c : $.AnnualOperatingCosts.LeasedAnnualMaintenanceCosts,
	AnnualRent__c : $.AnnualOperatingCosts.LeaseAnnualRent,
	//RecurringCost__c : $.AnnualOperatingCosts.ComponentCosts.TotalRecurringMaintRepairCost,
	//ElevatorCost__c : $.AnnualOperatingCosts.ComponentCosts.ElevatorCost,
	//HVACCost__c : $.AnnualOperatingCosts.ComponentCosts.HVACCost,
	//PlumbingCost__c : $.AnnualOperatingCosts.ComponentCosts.PlumbingCost,
	//TotalUtilitiesCost__c : $.AnnualOperatingCosts.ComponentCosts.TotalUtilitiesCost,
	//WaterSewageCost__c : $.AnnualOperatingCosts.ComponentCosts.WaterSewageCost,
	//ElectricityCost__c : $.AnnualOperatingCosts.ComponentCosts.ElectricityCost,
	//GasCost__c : $.AnnualOperatingCosts.ComponentCosts.GasCost,
	//SteamCost__c : $.AnnualOperatingCosts.ComponentCosts.SteamCost,
	//CleaningCost__c : $.AnnualOperatingCosts.ComponentCosts.CleaningJanitorialCost,
	//RoadsCost__c : $.AnnualOperatingCosts.ComponentCosts.RoadsGroundsKeepingCost,
	StreetAddress__c : $.MainLocation.StreetAddress,
	Latitude__c : $.MainLocation.Latitude,
	Longitude__c : $.MainLocation.Longitude,
	RealPropertyUniqueId__c : $.RealPropertyUniqueIdentifier,
	CityCode__c : $.City,
	StateCode__c : $.State,
	CountryCode__c : $.Country,
	CountyCode__c : $.County,
	CongressionalDistrict__c : $.CongressionalDistricts,
	ZipCode__c : $.Zipcode,
	InstallationName__c : $.InstallationAndSubInstallationIdentifier.InstallationName,
	InstallationId__c : $.InstallationAndSubInstallationIdentifier.InstallationIdentifier,
	SubInstallationId__c : $.InstallationAndSubInstallationIdentifier.SubInstallationIdentifier,
	DispositionMethodCode__c : $.DispositionData.DispositionMethod,
	DispositionDate__c : if ($.DispositionData.DispositionDate != null) $.DispositionData.DispositionDate as sfDate else null,
	DispositionValue__c : $.DispositionData.DispositionValue,
	NetProceeds__c : $.DispositionData.NetProceeds,
	Real_Property_Code__c : $.RealProperty,
	FOIA_Exemption_Code__c : $.FOIAExemption,
	Statutory_Citation__c : $.StatutoryCitation,
	ActionType__c: vars.buildingPayload.FRPPData.@ACTION,
	FILE_ID__c: vars.file.Id,
	FiscalYear__c: '${current.fiscalYear}'
}

]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="30e10dff-f458-48cb-b4e9-ed876ce28afa" message="No AssetType Set.  "/>
					</otherwise>
				</choice>
				<flow-ref doc:name="payload to SF" doc:id="3c389417-63c3-4271-a9e7-b6a628e94868" name="sendSFPayload" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="40944b0d-963f-4d79-b58c-5fc0909eb547" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR: Had Errors other then Validation Errors. Exiting out." />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sendSFPayload" doc:id="10357f7b-962e-4244-a847-427f0129b322" >
			<salesforce:create type="FRPP_ASSET__c" doc:name="Create Assets" doc:id="f52765e1-c0f7-4af7-8938-5b7296aa7702" config-ref="SalesforceGeoFL3_Global" target="sfResponse">
				<salesforce:records ><![CDATA[#[vars.sfAssetsPayload]]]></salesforce:records>
			</salesforce:create>
		<choice doc:name="Choice" doc:id="76cfcdc9-f80e-46ef-a6f5-b74b56dd3bee" >
				<when expression='sizeOf (flatten(vars.sfResponse.errors) filter ($.statusCode != "FIELD_CUSTOM_VALIDATION_EXCEPTION" )) &lt; 1'>
				<ee:transform doc:name="ErrorAssets +ErrorCounts (2)" doc:id="3cb2418b-32b8-4536-8559-658c19f2cca6">
				<ee:message>
				</ee:message>
				<ee:variables>
						<ee:set-variable variableName="countSuccessASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countSuccessASTAdded) + (sizeOf (vars.sfResponse.*id filter ($ != null)))]]></ee:set-variable>
						<ee:set-variable variableName="sfErrorAssestsPayload" ><![CDATA[%dw 2.0
output application/java
---
vars.sfAssetsPayload filter (vars.sfResponse.id[$$] == null) map (
	$ ++
	{
	  CI_FLAG__c: "Y"	
	})
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
				<choice doc:name="Choice" doc:id="8ade656d-1330-41a9-839e-cbd369d75387">
					<when expression="#[sizeOf (vars.sfResponse.*id filter ($ == null)) &gt; 0]">
						<salesforce:create doc:name="Create Error Assets" doc:id="8213d403-4b4d-4b37-b74e-4f5b3b317be5" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET__c" target="sfErrorAssestsResponse">
					<salesforce:records><![CDATA[#[vars.sfErrorAssestsPayload]]]></salesforce:records>
				</salesforce:create>
						<ee:transform doc:name="Errors Mapping (2)" doc:id="b0fc2e22-e440-4ca0-ba6f-e2034c068bdb">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
vars.sfResponse filter ($.id == null) map ((a,aIndex) -> {
 errors: a.errors map ((b,bIndex) -> {
 	
	ASSETTYPE__c: vars.assetType, 
	Agency_Code__c: vars.file.AGENCY_CODE__c,
	ERROR_FIELD__c: b.fields[0],
	ERROR_MESSAGE__c: b.message,
   	FILE_ID__c: vars.file.Id,
	FRPP_ASSET_ID__c: vars.sfErrorAssestsResponse[aIndex].id
     })
})]]></ee:set-variable>
								<ee:set-variable variableName="countErrorASTAdded" ><![CDATA[%dw 2.0
output application/java
---
(vars.countErrorASTAdded) + (sizeOf (vars.sfErrorAssestsResponse.*id filter ($ != null)))]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<ee:transform doc:name="flatten Payload" doc:id="63748fe7-5f73-4db5-b149-1ad5c616fbbd">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="sfErrorsPayload"><![CDATA[%dw 2.0
output application/json
---
flatten (vars.sfErrorsPayload.errors)]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
						<foreach doc:name="For Each 200 Batch" doc:id="c84071a8-5d34-4949-a06d-8fe74f5ca319" collection="#[vars.sfErrorsPayload]" batchSize="200">
							<ee:transform doc:name="Transform To JSON" doc:id="e4553cf2-1283-4af6-98c5-a675aae3a99b" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
								</ee:message>
							</ee:transform>
							<salesforce:create doc:name="Create Errors" doc:id="8c99ee4e-55da-4fca-9247-ae37498f8993" config-ref="SalesforceGeoFL3_Global" type="FRPP_ASSET_ERROR__c" target="sfErrorsResponse">
				</salesforce:create>
						</foreach>
						<logger level="INFO" doc:name="Error Logger" doc:id="2929da6b-6c09-492b-afce-6fec7dfc4198" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3b. #[vars.assetType] Batch No.: #[vars.counter] ALL Error records processed Succesfully."/>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Success Logger" doc:id="0f8f80fa-b476-42dc-b553-9361736c0e08" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; 3a. #[vars.assetType] Batch No.: #[vars.counter] ALL records processed Succesfully."/>
					</otherwise>
				</choice>
				<ee:transform doc:name="Set BatchCompletion Statuses" doc:id="089c1613-f4ca-4362-afd4-ef0540827914">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="updateStatusReq"><![CDATA[%dw 2.0
output application/json
---
[{
	Id: vars.file.Id,
	Status__c: p('status2'),  //Validation in Progress
	CI_STATUS__c : p('CI.status2') //COMPLETED
}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
					<flow-ref doc:name="SetFileStatus" doc:id="a5786738-a32b-4e7f-8ff7-9f02dfbc7926" name="SetStatuses" />
				</when>
				<otherwise >
					<logger level="INFO" doc:name="Validation Errors" doc:id="36eb4097-17d2-40e7-a40e-2b87dcb89df7" message="File ID: #[vars.file.Id], File Name: #[vars.fileName] --&gt; ERROR:  Received SF error other then Validation Error.  Need to Exit."/>
				<set-variable value="false" doc:name="Set proceed? to false" doc:id="cee8c2c1-2897-4f44-a650-1f5b56027ba7" variableName="proceed?" />
				<set-variable value="${InvalidXMLFYTemplateName}" doc:name="set useTemplateName" doc:id="b1c0fae7-20d5-49da-b48f-66c0e991bb26" variableName="useTemplateName" />
				<ee:transform doc:name="set error Msg" doc:id="0df647cc-54f9-4294-b381-c36b15bf4109">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["Fiscal Year does not match."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="userEmailNotificationFlow" doc:id="dc8eb778-b9c1-4526-a2c6-2b26fd8a5a55" name="userEmailNotificationFlow" />
				<ee:transform doc:name="set error Msg" doc:id="3d972ccd-4b63-4a0d-ac93-5cbe16aa90f4">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorMsg" ><![CDATA[%dw 2.0
output application/java
---
["THis is is my Error 1", "This is my Error 2."]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value='This is the email body for the Support Email. ' doc:name="email Body" doc:id="4bfff975-d3f3-4ec7-879b-e513a6c7123b" variableName="emailBody"/>
				<flow-ref doc:name="SupportEmail" doc:id="0e4c6d7a-85b8-403f-a0d2-e685d4ab48bd" name="supportEmailNotificationFlow" />
				
				</otherwise>
			</choice>
	</sub-flow>
</mule>